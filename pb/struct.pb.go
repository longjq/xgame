// Code generated by protoc-gen-go. DO NOT EDIT.
// source: struct.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//玩家信息
type Player struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Mobile               *string  `protobuf:"bytes,2,opt,name=mobile" json:"mobile,omitempty"`
	Nick                 *string  `protobuf:"bytes,3,req,name=nick" json:"nick,omitempty"`
	Avatar               *string  `protobuf:"bytes,4,req,name=avatar" json:"avatar,omitempty"`
	Gold                 *int64   `protobuf:"varint,5,req,name=gold" json:"gold,omitempty"`
	Diamond              *int64   `protobuf:"varint,6,req,name=diamond" json:"diamond,omitempty"`
	Vip                  *int32   `protobuf:"varint,7,req,name=vip" json:"vip,omitempty"`
	Charm                *int32   `protobuf:"varint,8,req,name=charm" json:"charm,omitempty"`
	Exp                  *int32   `protobuf:"varint,10,req,name=exp" json:"exp,omitempty"`
	TotalGames           *int32   `protobuf:"varint,11,req,name=total_games,json=totalGames" json:"total_games,omitempty"`
	WinGames             *int32   `protobuf:"varint,12,req,name=win_games,json=winGames" json:"win_games,omitempty"`
	WealthRank           *int32   `protobuf:"varint,13,opt,name=wealth_rank,json=wealthRank" json:"wealth_rank,omitempty"`
	WinRank              *int32   `protobuf:"varint,14,opt,name=win_rank,json=winRank" json:"win_rank,omitempty"`
	CharmRank            *int32   `protobuf:"varint,15,opt,name=charm_rank,json=charmRank" json:"charm_rank,omitempty"`
	ChargeRank           *int32   `protobuf:"varint,16,opt,name=charge_rank,json=chargeRank" json:"charge_rank,omitempty"`
	Sign                 *string  `protobuf:"bytes,17,opt,name=sign" json:"sign,omitempty"`
	Sex                  *int32   `protobuf:"varint,18,opt,name=sex" json:"sex,omitempty"`
	Birthday             *string  `protobuf:"bytes,19,opt,name=birthday" json:"birthday,omitempty"`
	Address              *string  `protobuf:"bytes,20,opt,name=address" json:"address,omitempty"`
	Gifts                []*Gift  `protobuf:"bytes,21,rep,name=gifts" json:"gifts,omitempty"`
	Best                 []*Poker `protobuf:"bytes,22,rep,name=best" json:"best,omitempty"`
	IsFriend             *bool    `protobuf:"varint,23,opt,name=is_friend,json=isFriend" json:"is_friend,omitempty"`
	VipExp               *int32   `protobuf:"varint,24,opt,name=vip_exp,json=vipExp" json:"vip_exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Player) Reset()         { *m = Player{} }
func (m *Player) String() string { return proto.CompactTextString(m) }
func (*Player) ProtoMessage()    {}
func (*Player) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{0}
}

func (m *Player) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Player.Unmarshal(m, b)
}
func (m *Player) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Player.Marshal(b, m, deterministic)
}
func (m *Player) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Player.Merge(m, src)
}
func (m *Player) XXX_Size() int {
	return xxx_messageInfo_Player.Size(m)
}
func (m *Player) XXX_DiscardUnknown() {
	xxx_messageInfo_Player.DiscardUnknown(m)
}

var xxx_messageInfo_Player proto.InternalMessageInfo

func (m *Player) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Player) GetMobile() string {
	if m != nil && m.Mobile != nil {
		return *m.Mobile
	}
	return ""
}

func (m *Player) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *Player) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *Player) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Player) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *Player) GetVip() int32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *Player) GetCharm() int32 {
	if m != nil && m.Charm != nil {
		return *m.Charm
	}
	return 0
}

func (m *Player) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *Player) GetTotalGames() int32 {
	if m != nil && m.TotalGames != nil {
		return *m.TotalGames
	}
	return 0
}

func (m *Player) GetWinGames() int32 {
	if m != nil && m.WinGames != nil {
		return *m.WinGames
	}
	return 0
}

func (m *Player) GetWealthRank() int32 {
	if m != nil && m.WealthRank != nil {
		return *m.WealthRank
	}
	return 0
}

func (m *Player) GetWinRank() int32 {
	if m != nil && m.WinRank != nil {
		return *m.WinRank
	}
	return 0
}

func (m *Player) GetCharmRank() int32 {
	if m != nil && m.CharmRank != nil {
		return *m.CharmRank
	}
	return 0
}

func (m *Player) GetChargeRank() int32 {
	if m != nil && m.ChargeRank != nil {
		return *m.ChargeRank
	}
	return 0
}

func (m *Player) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

func (m *Player) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *Player) GetBirthday() string {
	if m != nil && m.Birthday != nil {
		return *m.Birthday
	}
	return ""
}

func (m *Player) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Player) GetGifts() []*Gift {
	if m != nil {
		return m.Gifts
	}
	return nil
}

func (m *Player) GetBest() []*Poker {
	if m != nil {
		return m.Best
	}
	return nil
}

func (m *Player) GetIsFriend() bool {
	if m != nil && m.IsFriend != nil {
		return *m.IsFriend
	}
	return false
}

func (m *Player) GetVipExp() int32 {
	if m != nil && m.VipExp != nil {
		return *m.VipExp
	}
	return 0
}

//玩家信息摘要
type PlayerBrief struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Avatar               *string  `protobuf:"bytes,2,req,name=avatar" json:"avatar,omitempty"`
	Gold                 *int64   `protobuf:"varint,3,req,name=gold" json:"gold,omitempty"`
	Seat                 *int32   `protobuf:"varint,4,req,name=seat" json:"seat,omitempty"`
	Nick                 *string  `protobuf:"bytes,5,req,name=nick" json:"nick,omitempty"`
	Vip                  *int32   `protobuf:"varint,6,req,name=vip" json:"vip,omitempty"`
	Diamond              *int64   `protobuf:"varint,7,opt,name=diamond" json:"diamond,omitempty"`
	VipExp               *int32   `protobuf:"varint,8,opt,name=vip_exp,json=vipExp" json:"vip_exp,omitempty"`
	Sex                  *int32   `protobuf:"varint,9,opt,name=sex" json:"sex,omitempty"`
	Exp                  *int32   `protobuf:"varint,10,opt,name=exp" json:"exp,omitempty"`
	FlowCard             *int32   `protobuf:"varint,11,opt,name=flow_card,json=flowCard" json:"flow_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerBrief) Reset()         { *m = PlayerBrief{} }
func (m *PlayerBrief) String() string { return proto.CompactTextString(m) }
func (*PlayerBrief) ProtoMessage()    {}
func (*PlayerBrief) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{1}
}

func (m *PlayerBrief) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerBrief.Unmarshal(m, b)
}
func (m *PlayerBrief) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerBrief.Marshal(b, m, deterministic)
}
func (m *PlayerBrief) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerBrief.Merge(m, src)
}
func (m *PlayerBrief) XXX_Size() int {
	return xxx_messageInfo_PlayerBrief.Size(m)
}
func (m *PlayerBrief) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerBrief.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerBrief proto.InternalMessageInfo

func (m *PlayerBrief) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlayerBrief) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *PlayerBrief) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *PlayerBrief) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *PlayerBrief) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *PlayerBrief) GetVip() int32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *PlayerBrief) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *PlayerBrief) GetVipExp() int32 {
	if m != nil && m.VipExp != nil {
		return *m.VipExp
	}
	return 0
}

func (m *PlayerBrief) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *PlayerBrief) GetExp() int32 {
	if m != nil && m.Exp != nil {
		return *m.Exp
	}
	return 0
}

func (m *PlayerBrief) GetFlowCard() int32 {
	if m != nil && m.FlowCard != nil {
		return *m.FlowCard
	}
	return 0
}

type Result struct {
	Gold                 *int64   `protobuf:"varint,1,opt,name=gold" json:"gold,omitempty"`
	Diamond              *int64   `protobuf:"varint,2,opt,name=diamond" json:"diamond,omitempty"`
	VipExp               *int32   `protobuf:"varint,3,opt,name=vip_exp,json=vipExp" json:"vip_exp,omitempty"`
	Vip                  *int32   `protobuf:"varint,4,opt,name=vip" json:"vip,omitempty"`
	ItemsAdded           []*Item  `protobuf:"bytes,5,rep,name=items_added,json=itemsAdded" json:"items_added,omitempty"`
	GiftsAdded           []*Gift  `protobuf:"bytes,6,rep,name=gifts_added,json=giftsAdded" json:"gifts_added,omitempty"`
	ItemsRemoved         []*Item  `protobuf:"bytes,7,rep,name=items_removed,json=itemsRemoved" json:"items_removed,omitempty"`
	IncrGold             *int64   `protobuf:"varint,8,opt,name=incr_gold,json=incrGold" json:"incr_gold,omitempty"`
	IncrDiamond          *int64   `protobuf:"varint,9,opt,name=incr_diamond,json=incrDiamond" json:"incr_diamond,omitempty"`
	IncrFlowCard         *int32   `protobuf:"varint,10,opt,name=incr_flow_card,json=incrFlowCard" json:"incr_flow_card,omitempty"`
	FlowCard             *int32   `protobuf:"varint,11,opt,name=flow_card,json=flowCard" json:"flow_card,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{2}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Result) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *Result) GetVipExp() int32 {
	if m != nil && m.VipExp != nil {
		return *m.VipExp
	}
	return 0
}

func (m *Result) GetVip() int32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *Result) GetItemsAdded() []*Item {
	if m != nil {
		return m.ItemsAdded
	}
	return nil
}

func (m *Result) GetGiftsAdded() []*Gift {
	if m != nil {
		return m.GiftsAdded
	}
	return nil
}

func (m *Result) GetItemsRemoved() []*Item {
	if m != nil {
		return m.ItemsRemoved
	}
	return nil
}

func (m *Result) GetIncrGold() int64 {
	if m != nil && m.IncrGold != nil {
		return *m.IncrGold
	}
	return 0
}

func (m *Result) GetIncrDiamond() int64 {
	if m != nil && m.IncrDiamond != nil {
		return *m.IncrDiamond
	}
	return 0
}

func (m *Result) GetIncrFlowCard() int32 {
	if m != nil && m.IncrFlowCard != nil {
		return *m.IncrFlowCard
	}
	return 0
}

func (m *Result) GetFlowCard() int32 {
	if m != nil && m.FlowCard != nil {
		return *m.FlowCard
	}
	return 0
}

type Gift struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Icon                 *string  `protobuf:"bytes,3,req,name=icon" json:"icon,omitempty"`
	Count                *int32   `protobuf:"varint,4,req,name=count" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Gift) Reset()         { *m = Gift{} }
func (m *Gift) String() string { return proto.CompactTextString(m) }
func (*Gift) ProtoMessage()    {}
func (*Gift) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{3}
}

func (m *Gift) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gift.Unmarshal(m, b)
}
func (m *Gift) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gift.Marshal(b, m, deterministic)
}
func (m *Gift) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gift.Merge(m, src)
}
func (m *Gift) XXX_Size() int {
	return xxx_messageInfo_Gift.Size(m)
}
func (m *Gift) XXX_DiscardUnknown() {
	xxx_messageInfo_Gift.DiscardUnknown(m)
}

var xxx_messageInfo_Gift proto.InternalMessageInfo

func (m *Gift) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Gift) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Gift) GetIcon() string {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return ""
}

func (m *Gift) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

type Announcement struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Category             *string  `protobuf:"bytes,2,req,name=category" json:"category,omitempty"`
	Title                *string  `protobuf:"bytes,3,req,name=title" json:"title,omitempty"`
	Content              *string  `protobuf:"bytes,4,req,name=content" json:"content,omitempty"`
	Sort                 *int32   `protobuf:"varint,5,req,name=sort" json:"sort,omitempty"`
	HasAction            *int32   `protobuf:"varint,6,req,name=has_action,json=hasAction" json:"has_action,omitempty"`
	Action               *string  `protobuf:"bytes,7,opt,name=action" json:"action,omitempty"`
	Popup                *int32   `protobuf:"varint,8,req,name=popup" json:"popup,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Announcement) Reset()         { *m = Announcement{} }
func (m *Announcement) String() string { return proto.CompactTextString(m) }
func (*Announcement) ProtoMessage()    {}
func (*Announcement) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{4}
}

func (m *Announcement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Announcement.Unmarshal(m, b)
}
func (m *Announcement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Announcement.Marshal(b, m, deterministic)
}
func (m *Announcement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Announcement.Merge(m, src)
}
func (m *Announcement) XXX_Size() int {
	return xxx_messageInfo_Announcement.Size(m)
}
func (m *Announcement) XXX_DiscardUnknown() {
	xxx_messageInfo_Announcement.DiscardUnknown(m)
}

var xxx_messageInfo_Announcement proto.InternalMessageInfo

func (m *Announcement) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Announcement) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *Announcement) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Announcement) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *Announcement) GetSort() int32 {
	if m != nil && m.Sort != nil {
		return *m.Sort
	}
	return 0
}

func (m *Announcement) GetHasAction() int32 {
	if m != nil && m.HasAction != nil {
		return *m.HasAction
	}
	return 0
}

func (m *Announcement) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *Announcement) GetPopup() int32 {
	if m != nil && m.Popup != nil {
		return *m.Popup
	}
	return 0
}

type Notification struct {
	HasAnnouncement      *int32   `protobuf:"varint,1,opt,name=has_announcement,json=hasAnnouncement" json:"has_announcement,omitempty"`
	HasMail              *int32   `protobuf:"varint,2,opt,name=has_mail,json=hasMail" json:"has_mail,omitempty"`
	HasReward            *int32   `protobuf:"varint,3,opt,name=has_reward,json=hasReward" json:"has_reward,omitempty"`
	HasFriend            *int32   `protobuf:"varint,4,opt,name=has_friend,json=hasFriend" json:"has_friend,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Notification) Reset()         { *m = Notification{} }
func (m *Notification) String() string { return proto.CompactTextString(m) }
func (*Notification) ProtoMessage()    {}
func (*Notification) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{5}
}

func (m *Notification) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Notification.Unmarshal(m, b)
}
func (m *Notification) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Notification.Marshal(b, m, deterministic)
}
func (m *Notification) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Notification.Merge(m, src)
}
func (m *Notification) XXX_Size() int {
	return xxx_messageInfo_Notification.Size(m)
}
func (m *Notification) XXX_DiscardUnknown() {
	xxx_messageInfo_Notification.DiscardUnknown(m)
}

var xxx_messageInfo_Notification proto.InternalMessageInfo

func (m *Notification) GetHasAnnouncement() int32 {
	if m != nil && m.HasAnnouncement != nil {
		return *m.HasAnnouncement
	}
	return 0
}

func (m *Notification) GetHasMail() int32 {
	if m != nil && m.HasMail != nil {
		return *m.HasMail
	}
	return 0
}

func (m *Notification) GetHasReward() int32 {
	if m != nil && m.HasReward != nil {
		return *m.HasReward
	}
	return 0
}

func (m *Notification) GetHasFriend() int32 {
	if m != nil && m.HasFriend != nil {
		return *m.HasFriend
	}
	return 0
}

type Reward struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Category             *string  `protobuf:"bytes,2,req,name=category" json:"category,omitempty"`
	Name                 *string  `protobuf:"bytes,3,req,name=name" json:"name,omitempty"`
	Description          *string  `protobuf:"bytes,4,req,name=description" json:"description,omitempty"`
	Gold                 *int64   `protobuf:"varint,5,opt,name=gold" json:"gold,omitempty"`
	Diamond              *int64   `protobuf:"varint,6,opt,name=diamond" json:"diamond,omitempty"`
	Items                []*Item  `protobuf:"bytes,7,rep,name=items" json:"items,omitempty"`
	Gifts                []*Gift  `protobuf:"bytes,8,rep,name=gifts" json:"gifts,omitempty"`
	State                *int32   `protobuf:"varint,9,req,name=state" json:"state,omitempty"`
	Action               *string  `protobuf:"bytes,10,req,name=action" json:"action,omitempty"`
	Icon                 *int32   `protobuf:"varint,11,opt,name=icon" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reward) Reset()         { *m = Reward{} }
func (m *Reward) String() string { return proto.CompactTextString(m) }
func (*Reward) ProtoMessage()    {}
func (*Reward) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{6}
}

func (m *Reward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reward.Unmarshal(m, b)
}
func (m *Reward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reward.Marshal(b, m, deterministic)
}
func (m *Reward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reward.Merge(m, src)
}
func (m *Reward) XXX_Size() int {
	return xxx_messageInfo_Reward.Size(m)
}
func (m *Reward) XXX_DiscardUnknown() {
	xxx_messageInfo_Reward.DiscardUnknown(m)
}

var xxx_messageInfo_Reward proto.InternalMessageInfo

func (m *Reward) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Reward) GetCategory() string {
	if m != nil && m.Category != nil {
		return *m.Category
	}
	return ""
}

func (m *Reward) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Reward) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *Reward) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Reward) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *Reward) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Reward) GetGifts() []*Gift {
	if m != nil {
		return m.Gifts
	}
	return nil
}

func (m *Reward) GetState() int32 {
	if m != nil && m.State != nil {
		return *m.State
	}
	return 0
}

func (m *Reward) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *Reward) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

type SigninReward struct {
	Day                  *int32   `protobuf:"varint,1,req,name=day" json:"day,omitempty"`
	Description          *string  `protobuf:"bytes,2,req,name=description" json:"description,omitempty"`
	Gold                 *int64   `protobuf:"varint,3,req,name=gold" json:"gold,omitempty"`
	Diamond              *int64   `protobuf:"varint,4,req,name=diamond" json:"diamond,omitempty"`
	Items                []*Item  `protobuf:"bytes,5,rep,name=items" json:"items,omitempty"`
	Gifts                []*Gift  `protobuf:"bytes,6,rep,name=gifts" json:"gifts,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SigninReward) Reset()         { *m = SigninReward{} }
func (m *SigninReward) String() string { return proto.CompactTextString(m) }
func (*SigninReward) ProtoMessage()    {}
func (*SigninReward) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{7}
}

func (m *SigninReward) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SigninReward.Unmarshal(m, b)
}
func (m *SigninReward) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SigninReward.Marshal(b, m, deterministic)
}
func (m *SigninReward) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SigninReward.Merge(m, src)
}
func (m *SigninReward) XXX_Size() int {
	return xxx_messageInfo_SigninReward.Size(m)
}
func (m *SigninReward) XXX_DiscardUnknown() {
	xxx_messageInfo_SigninReward.DiscardUnknown(m)
}

var xxx_messageInfo_SigninReward proto.InternalMessageInfo

func (m *SigninReward) GetDay() int32 {
	if m != nil && m.Day != nil {
		return *m.Day
	}
	return 0
}

func (m *SigninReward) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *SigninReward) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *SigninReward) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *SigninReward) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *SigninReward) GetGifts() []*Gift {
	if m != nil {
		return m.Gifts
	}
	return nil
}

type Item struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Icon                 *string  `protobuf:"bytes,3,req,name=icon" json:"icon,omitempty"`
	Count                *int32   `protobuf:"varint,4,req,name=count" json:"count,omitempty"`
	Description          *string  `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Item) Reset()         { *m = Item{} }
func (m *Item) String() string { return proto.CompactTextString(m) }
func (*Item) ProtoMessage()    {}
func (*Item) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{8}
}

func (m *Item) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Item.Unmarshal(m, b)
}
func (m *Item) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Item.Marshal(b, m, deterministic)
}
func (m *Item) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Item.Merge(m, src)
}
func (m *Item) XXX_Size() int {
	return xxx_messageInfo_Item.Size(m)
}
func (m *Item) XXX_DiscardUnknown() {
	xxx_messageInfo_Item.DiscardUnknown(m)
}

var xxx_messageInfo_Item proto.InternalMessageInfo

func (m *Item) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Item) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Item) GetIcon() string {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return ""
}

func (m *Item) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

func (m *Item) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type ShopItem struct {
	Id                   *int32        `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ItemType             *ShopItemType `protobuf:"varint,2,req,name=item_type,json=itemType,enum=pb.ShopItemType" json:"item_type,omitempty"`
	Item                 *Item         `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	ShopGold             *int64        `protobuf:"varint,4,opt,name=shop_gold,json=shopGold" json:"shop_gold,omitempty"`
	Diamond              *int64        `protobuf:"varint,5,req,name=diamond" json:"diamond,omitempty"`
	Gold                 *int64        `protobuf:"varint,6,req,name=gold" json:"gold,omitempty"`
	ExtraGold            *int64        `protobuf:"varint,8,opt,name=extra_gold,json=extraGold" json:"extra_gold,omitempty"`
	ExtraItems           []*Item       `protobuf:"bytes,9,rep,name=extra_items,json=extraItems" json:"extra_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ShopItem) Reset()         { *m = ShopItem{} }
func (m *ShopItem) String() string { return proto.CompactTextString(m) }
func (*ShopItem) ProtoMessage()    {}
func (*ShopItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{9}
}

func (m *ShopItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ShopItem.Unmarshal(m, b)
}
func (m *ShopItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ShopItem.Marshal(b, m, deterministic)
}
func (m *ShopItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ShopItem.Merge(m, src)
}
func (m *ShopItem) XXX_Size() int {
	return xxx_messageInfo_ShopItem.Size(m)
}
func (m *ShopItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ShopItem.DiscardUnknown(m)
}

var xxx_messageInfo_ShopItem proto.InternalMessageInfo

func (m *ShopItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ShopItem) GetItemType() ShopItemType {
	if m != nil && m.ItemType != nil {
		return *m.ItemType
	}
	return ShopItemType_SHOP_GOLD
}

func (m *ShopItem) GetItem() *Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (m *ShopItem) GetShopGold() int64 {
	if m != nil && m.ShopGold != nil {
		return *m.ShopGold
	}
	return 0
}

func (m *ShopItem) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *ShopItem) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *ShopItem) GetExtraGold() int64 {
	if m != nil && m.ExtraGold != nil {
		return *m.ExtraGold
	}
	return 0
}

func (m *ShopItem) GetExtraItems() []*Item {
	if m != nil {
		return m.ExtraItems
	}
	return nil
}

type Trade struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Type                 *int32   `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Gold                 *int64   `protobuf:"varint,3,req,name=gold" json:"gold,omitempty"`
	Diamond              *int64   `protobuf:"varint,4,req,name=diamond" json:"diamond,omitempty"`
	Seller               *int32   `protobuf:"varint,5,req,name=seller" json:"seller,omitempty"`
	SellerName           *string  `protobuf:"bytes,6,req,name=seller_name,json=sellerName" json:"seller_name,omitempty"`
	VipExp               *int32   `protobuf:"varint,7,opt,name=vip_exp,json=vipExp" json:"vip_exp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{10}
}

func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (m *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(m, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Trade) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Trade) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Trade) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *Trade) GetSeller() int32 {
	if m != nil && m.Seller != nil {
		return *m.Seller
	}
	return 0
}

func (m *Trade) GetSellerName() string {
	if m != nil && m.SellerName != nil {
		return *m.SellerName
	}
	return ""
}

func (m *Trade) GetVipExp() int32 {
	if m != nil && m.VipExp != nil {
		return *m.VipExp
	}
	return 0
}

//牌
type Poker struct {
	Flower               *int32   `protobuf:"varint,1,req,name=flower" json:"flower,omitempty"`
	Value                *int32   `protobuf:"varint,2,req,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Poker) Reset()         { *m = Poker{} }
func (m *Poker) String() string { return proto.CompactTextString(m) }
func (*Poker) ProtoMessage()    {}
func (*Poker) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{11}
}

func (m *Poker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Poker.Unmarshal(m, b)
}
func (m *Poker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Poker.Marshal(b, m, deterministic)
}
func (m *Poker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Poker.Merge(m, src)
}
func (m *Poker) XXX_Size() int {
	return xxx_messageInfo_Poker.Size(m)
}
func (m *Poker) XXX_DiscardUnknown() {
	xxx_messageInfo_Poker.DiscardUnknown(m)
}

var xxx_messageInfo_Poker proto.InternalMessageInfo

func (m *Poker) GetFlower() int32 {
	if m != nil && m.Flower != nil {
		return *m.Flower
	}
	return 0
}

func (m *Poker) GetValue() int32 {
	if m != nil && m.Value != nil {
		return *m.Value
	}
	return 0
}

//玩家动作
type PlayerAction struct {
	Uid                  *int32     `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Action               *BetAction `protobuf:"varint,2,req,name=action,enum=pb.BetAction" json:"action,omitempty"`
	Other                *int32     `protobuf:"varint,3,opt,name=other" json:"other,omitempty"`
	Gold                 *int64     `protobuf:"varint,4,req,name=gold" json:"gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *PlayerAction) Reset()         { *m = PlayerAction{} }
func (m *PlayerAction) String() string { return proto.CompactTextString(m) }
func (*PlayerAction) ProtoMessage()    {}
func (*PlayerAction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{12}
}

func (m *PlayerAction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerAction.Unmarshal(m, b)
}
func (m *PlayerAction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerAction.Marshal(b, m, deterministic)
}
func (m *PlayerAction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerAction.Merge(m, src)
}
func (m *PlayerAction) XXX_Size() int {
	return xxx_messageInfo_PlayerAction.Size(m)
}
func (m *PlayerAction) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerAction.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerAction proto.InternalMessageInfo

func (m *PlayerAction) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlayerAction) GetAction() BetAction {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return BetAction_FOLLOW
}

func (m *PlayerAction) GetOther() int32 {
	if m != nil && m.Other != nil {
		return *m.Other
	}
	return 0
}

func (m *PlayerAction) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

type Chip struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Gold                 *int64   `protobuf:"varint,2,req,name=gold" json:"gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chip) Reset()         { *m = Chip{} }
func (m *Chip) String() string { return proto.CompactTextString(m) }
func (*Chip) ProtoMessage()    {}
func (*Chip) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{13}
}

func (m *Chip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chip.Unmarshal(m, b)
}
func (m *Chip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chip.Marshal(b, m, deterministic)
}
func (m *Chip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chip.Merge(m, src)
}
func (m *Chip) XXX_Size() int {
	return xxx_messageInfo_Chip.Size(m)
}
func (m *Chip) XXX_DiscardUnknown() {
	xxx_messageInfo_Chip.DiscardUnknown(m)
}

var xxx_messageInfo_Chip proto.InternalMessageInfo

func (m *Chip) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Chip) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

//游戏回合
type GameRound struct {
	Round                *int32   `protobuf:"varint,1,req,name=round" json:"round,omitempty"`
	CurrentGambler       *int32   `protobuf:"varint,2,req,name=current_gambler,json=currentGambler" json:"current_gambler,omitempty"`
	TurnStartTime        *int32   `protobuf:"varint,3,req,name=turn_start_time,json=turnStartTime" json:"turn_start_time,omitempty"`
	TurnRemainTime       *int32   `protobuf:"varint,4,req,name=turn_remain_time,json=turnRemainTime" json:"turn_remain_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameRound) Reset()         { *m = GameRound{} }
func (m *GameRound) String() string { return proto.CompactTextString(m) }
func (*GameRound) ProtoMessage()    {}
func (*GameRound) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{14}
}

func (m *GameRound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameRound.Unmarshal(m, b)
}
func (m *GameRound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameRound.Marshal(b, m, deterministic)
}
func (m *GameRound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameRound.Merge(m, src)
}
func (m *GameRound) XXX_Size() int {
	return xxx_messageInfo_GameRound.Size(m)
}
func (m *GameRound) XXX_DiscardUnknown() {
	xxx_messageInfo_GameRound.DiscardUnknown(m)
}

var xxx_messageInfo_GameRound proto.InternalMessageInfo

func (m *GameRound) GetRound() int32 {
	if m != nil && m.Round != nil {
		return *m.Round
	}
	return 0
}

func (m *GameRound) GetCurrentGambler() int32 {
	if m != nil && m.CurrentGambler != nil {
		return *m.CurrentGambler
	}
	return 0
}

func (m *GameRound) GetTurnStartTime() int32 {
	if m != nil && m.TurnStartTime != nil {
		return *m.TurnStartTime
	}
	return 0
}

func (m *GameRound) GetTurnRemainTime() int32 {
	if m != nil && m.TurnRemainTime != nil {
		return *m.TurnRemainTime
	}
	return 0
}

type Gambler struct {
	Uid *int32 `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	//required string avatar = 2;
	//required int32 level = 3;
	//required string nick = 4;
	Gold                 *int64        `protobuf:"varint,5,req,name=gold" json:"gold,omitempty"`
	BetGold              *int64        `protobuf:"varint,6,req,name=bet_gold,json=betGold" json:"bet_gold,omitempty"`
	IsDealer             *bool         `protobuf:"varint,8,req,name=is_dealer,json=isDealer" json:"is_dealer,omitempty"`
	IsSeen               *bool         `protobuf:"varint,9,req,name=is_seen,json=isSeen" json:"is_seen,omitempty"`
	IsGivenUp            *bool         `protobuf:"varint,10,req,name=is_given_up,json=isGivenUp" json:"is_given_up,omitempty"`
	IsFail               *bool         `protobuf:"varint,11,req,name=is_fail,json=isFail" json:"is_fail,omitempty"`
	IsShowHand           *bool         `protobuf:"varint,12,req,name=is_show_hand,json=isShowHand" json:"is_show_hand,omitempty"`
	Seat                 *int32        `protobuf:"varint,13,req,name=seat" json:"seat,omitempty"`
	Pokers               *PlayerPokers `protobuf:"bytes,14,opt,name=pokers" json:"pokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Gambler) Reset()         { *m = Gambler{} }
func (m *Gambler) String() string { return proto.CompactTextString(m) }
func (*Gambler) ProtoMessage()    {}
func (*Gambler) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{15}
}

func (m *Gambler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Gambler.Unmarshal(m, b)
}
func (m *Gambler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Gambler.Marshal(b, m, deterministic)
}
func (m *Gambler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Gambler.Merge(m, src)
}
func (m *Gambler) XXX_Size() int {
	return xxx_messageInfo_Gambler.Size(m)
}
func (m *Gambler) XXX_DiscardUnknown() {
	xxx_messageInfo_Gambler.DiscardUnknown(m)
}

var xxx_messageInfo_Gambler proto.InternalMessageInfo

func (m *Gambler) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Gambler) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Gambler) GetBetGold() int64 {
	if m != nil && m.BetGold != nil {
		return *m.BetGold
	}
	return 0
}

func (m *Gambler) GetIsDealer() bool {
	if m != nil && m.IsDealer != nil {
		return *m.IsDealer
	}
	return false
}

func (m *Gambler) GetIsSeen() bool {
	if m != nil && m.IsSeen != nil {
		return *m.IsSeen
	}
	return false
}

func (m *Gambler) GetIsGivenUp() bool {
	if m != nil && m.IsGivenUp != nil {
		return *m.IsGivenUp
	}
	return false
}

func (m *Gambler) GetIsFail() bool {
	if m != nil && m.IsFail != nil {
		return *m.IsFail
	}
	return false
}

func (m *Gambler) GetIsShowHand() bool {
	if m != nil && m.IsShowHand != nil {
		return *m.IsShowHand
	}
	return false
}

func (m *Gambler) GetSeat() int32 {
	if m != nil && m.Seat != nil {
		return *m.Seat
	}
	return 0
}

func (m *Gambler) GetPokers() *PlayerPokers {
	if m != nil {
		return m.Pokers
	}
	return nil
}

type Table struct {
	Id                   *int32         `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Players              []*PlayerBrief `protobuf:"bytes,2,rep,name=players" json:"players,omitempty"`
	TableType            *TableType     `protobuf:"varint,3,req,name=table_type,json=tableType,enum=pb.TableType" json:"table_type,omitempty"`
	Goldflower           *GoldFlower    `protobuf:"bytes,4,opt,name=goldflower" json:"goldflower,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Table) Reset()         { *m = Table{} }
func (m *Table) String() string { return proto.CompactTextString(m) }
func (*Table) ProtoMessage()    {}
func (*Table) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{16}
}

func (m *Table) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Table.Unmarshal(m, b)
}
func (m *Table) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Table.Marshal(b, m, deterministic)
}
func (m *Table) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Table.Merge(m, src)
}
func (m *Table) XXX_Size() int {
	return xxx_messageInfo_Table.Size(m)
}
func (m *Table) XXX_DiscardUnknown() {
	xxx_messageInfo_Table.DiscardUnknown(m)
}

var xxx_messageInfo_Table proto.InternalMessageInfo

func (m *Table) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Table) GetPlayers() []*PlayerBrief {
	if m != nil {
		return m.Players
	}
	return nil
}

func (m *Table) GetTableType() TableType {
	if m != nil && m.TableType != nil {
		return *m.TableType
	}
	return TableType_TABLE_L
}

func (m *Table) GetGoldflower() *GoldFlower {
	if m != nil {
		return m.Goldflower
	}
	return nil
}

type GoldFlower struct {
	StartTime            *int32     `protobuf:"varint,1,req,name=start_time,json=startTime" json:"start_time,omitempty"`
	Round                *GameRound `protobuf:"bytes,2,req,name=round" json:"round,omitempty"`
	Gamblers             []*Gambler `protobuf:"bytes,3,rep,name=gamblers" json:"gamblers,omitempty"`
	Chips                []*Chip    `protobuf:"bytes,4,rep,name=chips" json:"chips,omitempty"`
	RequiredGold         *int32     `protobuf:"varint,5,req,name=required_gold,json=requiredGold" json:"required_gold,omitempty"`
	MaxGold              *int32     `protobuf:"varint,6,req,name=max_gold,json=maxGold" json:"max_gold,omitempty"`
	RequiredRound        *int32     `protobuf:"varint,7,req,name=required_round,json=requiredRound" json:"required_round,omitempty"`
	MaxRound             *int32     `protobuf:"varint,8,req,name=max_round,json=maxRound" json:"max_round,omitempty"`
	RoundSeconds         *int32     `protobuf:"varint,9,req,name=round_seconds,json=roundSeconds" json:"round_seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GoldFlower) Reset()         { *m = GoldFlower{} }
func (m *GoldFlower) String() string { return proto.CompactTextString(m) }
func (*GoldFlower) ProtoMessage()    {}
func (*GoldFlower) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{17}
}

func (m *GoldFlower) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoldFlower.Unmarshal(m, b)
}
func (m *GoldFlower) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoldFlower.Marshal(b, m, deterministic)
}
func (m *GoldFlower) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoldFlower.Merge(m, src)
}
func (m *GoldFlower) XXX_Size() int {
	return xxx_messageInfo_GoldFlower.Size(m)
}
func (m *GoldFlower) XXX_DiscardUnknown() {
	xxx_messageInfo_GoldFlower.DiscardUnknown(m)
}

var xxx_messageInfo_GoldFlower proto.InternalMessageInfo

func (m *GoldFlower) GetStartTime() int32 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *GoldFlower) GetRound() *GameRound {
	if m != nil {
		return m.Round
	}
	return nil
}

func (m *GoldFlower) GetGamblers() []*Gambler {
	if m != nil {
		return m.Gamblers
	}
	return nil
}

func (m *GoldFlower) GetChips() []*Chip {
	if m != nil {
		return m.Chips
	}
	return nil
}

func (m *GoldFlower) GetRequiredGold() int32 {
	if m != nil && m.RequiredGold != nil {
		return *m.RequiredGold
	}
	return 0
}

func (m *GoldFlower) GetMaxGold() int32 {
	if m != nil && m.MaxGold != nil {
		return *m.MaxGold
	}
	return 0
}

func (m *GoldFlower) GetRequiredRound() int32 {
	if m != nil && m.RequiredRound != nil {
		return *m.RequiredRound
	}
	return 0
}

func (m *GoldFlower) GetMaxRound() int32 {
	if m != nil && m.MaxRound != nil {
		return *m.MaxRound
	}
	return 0
}

func (m *GoldFlower) GetRoundSeconds() int32 {
	if m != nil && m.RoundSeconds != nil {
		return *m.RoundSeconds
	}
	return 0
}

//玩家金币信息
type PlayerGold struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	ActionGold           *int64   `protobuf:"varint,2,req,name=action_gold,json=actionGold" json:"action_gold,omitempty"`
	BetGold              *int64   `protobuf:"varint,3,req,name=bet_gold,json=betGold" json:"bet_gold,omitempty"`
	Gold                 *int64   `protobuf:"varint,4,req,name=gold" json:"gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerGold) Reset()         { *m = PlayerGold{} }
func (m *PlayerGold) String() string { return proto.CompactTextString(m) }
func (*PlayerGold) ProtoMessage()    {}
func (*PlayerGold) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{18}
}

func (m *PlayerGold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerGold.Unmarshal(m, b)
}
func (m *PlayerGold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerGold.Marshal(b, m, deterministic)
}
func (m *PlayerGold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerGold.Merge(m, src)
}
func (m *PlayerGold) XXX_Size() int {
	return xxx_messageInfo_PlayerGold.Size(m)
}
func (m *PlayerGold) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerGold.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerGold proto.InternalMessageInfo

func (m *PlayerGold) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlayerGold) GetActionGold() int64 {
	if m != nil && m.ActionGold != nil {
		return *m.ActionGold
	}
	return 0
}

func (m *PlayerGold) GetBetGold() int64 {
	if m != nil && m.BetGold != nil {
		return *m.BetGold
	}
	return 0
}

func (m *PlayerGold) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

type PlayerPokers struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Pokers               []*Poker `protobuf:"bytes,2,rep,name=pokers" json:"pokers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PlayerPokers) Reset()         { *m = PlayerPokers{} }
func (m *PlayerPokers) String() string { return proto.CompactTextString(m) }
func (*PlayerPokers) ProtoMessage()    {}
func (*PlayerPokers) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{19}
}

func (m *PlayerPokers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PlayerPokers.Unmarshal(m, b)
}
func (m *PlayerPokers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PlayerPokers.Marshal(b, m, deterministic)
}
func (m *PlayerPokers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PlayerPokers.Merge(m, src)
}
func (m *PlayerPokers) XXX_Size() int {
	return xxx_messageInfo_PlayerPokers.Size(m)
}
func (m *PlayerPokers) XXX_DiscardUnknown() {
	xxx_messageInfo_PlayerPokers.DiscardUnknown(m)
}

var xxx_messageInfo_PlayerPokers proto.InternalMessageInfo

func (m *PlayerPokers) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *PlayerPokers) GetPokers() []*Poker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

type GameServer struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Ip                   *string  `protobuf:"bytes,2,req,name=ip" json:"ip,omitempty"`
	Port                 *int32   `protobuf:"varint,3,req,name=port" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameServer) Reset()         { *m = GameServer{} }
func (m *GameServer) String() string { return proto.CompactTextString(m) }
func (*GameServer) ProtoMessage()    {}
func (*GameServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{20}
}

func (m *GameServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameServer.Unmarshal(m, b)
}
func (m *GameServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameServer.Marshal(b, m, deterministic)
}
func (m *GameServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameServer.Merge(m, src)
}
func (m *GameServer) XXX_Size() int {
	return xxx_messageInfo_GameServer.Size(m)
}
func (m *GameServer) XXX_DiscardUnknown() {
	xxx_messageInfo_GameServer.DiscardUnknown(m)
}

var xxx_messageInfo_GameServer proto.InternalMessageInfo

func (m *GameServer) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GameServer) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *GameServer) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

type CharmRecord struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Nick                 *int32   `protobuf:"varint,2,req,name=nick" json:"nick,omitempty"`
	NickColor            *int32   `protobuf:"varint,3,req,name=nick_color,json=nickColor" json:"nick_color,omitempty"`
	Num                  *int32   `protobuf:"varint,4,req,name=num" json:"num,omitempty"`
	Action               *int32   `protobuf:"varint,5,req,name=action" json:"action,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CharmRecord) Reset()         { *m = CharmRecord{} }
func (m *CharmRecord) String() string { return proto.CompactTextString(m) }
func (*CharmRecord) ProtoMessage()    {}
func (*CharmRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{21}
}

func (m *CharmRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CharmRecord.Unmarshal(m, b)
}
func (m *CharmRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CharmRecord.Marshal(b, m, deterministic)
}
func (m *CharmRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CharmRecord.Merge(m, src)
}
func (m *CharmRecord) XXX_Size() int {
	return xxx_messageInfo_CharmRecord.Size(m)
}
func (m *CharmRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_CharmRecord.DiscardUnknown(m)
}

var xxx_messageInfo_CharmRecord proto.InternalMessageInfo

func (m *CharmRecord) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *CharmRecord) GetNick() int32 {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return 0
}

func (m *CharmRecord) GetNickColor() int32 {
	if m != nil && m.NickColor != nil {
		return *m.NickColor
	}
	return 0
}

func (m *CharmRecord) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *CharmRecord) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

type FriendsRecord struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Nick                 *int32   `protobuf:"varint,2,req,name=nick" json:"nick,omitempty"`
	NickColor            *int32   `protobuf:"varint,3,req,name=nick_color,json=nickColor" json:"nick_color,omitempty"`
	Action               *int32   `protobuf:"varint,4,req,name=action" json:"action,omitempty"`
	StuffId              *int32   `protobuf:"varint,5,opt,name=stuff_id,json=stuffId" json:"stuff_id,omitempty"`
	CharmRank            *int32   `protobuf:"varint,6,opt,name=charm_rank,json=charmRank" json:"charm_rank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendsRecord) Reset()         { *m = FriendsRecord{} }
func (m *FriendsRecord) String() string { return proto.CompactTextString(m) }
func (*FriendsRecord) ProtoMessage()    {}
func (*FriendsRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{22}
}

func (m *FriendsRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendsRecord.Unmarshal(m, b)
}
func (m *FriendsRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendsRecord.Marshal(b, m, deterministic)
}
func (m *FriendsRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendsRecord.Merge(m, src)
}
func (m *FriendsRecord) XXX_Size() int {
	return xxx_messageInfo_FriendsRecord.Size(m)
}
func (m *FriendsRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendsRecord.DiscardUnknown(m)
}

var xxx_messageInfo_FriendsRecord proto.InternalMessageInfo

func (m *FriendsRecord) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *FriendsRecord) GetNick() int32 {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return 0
}

func (m *FriendsRecord) GetNickColor() int32 {
	if m != nil && m.NickColor != nil {
		return *m.NickColor
	}
	return 0
}

func (m *FriendsRecord) GetAction() int32 {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return 0
}

func (m *FriendsRecord) GetStuffId() int32 {
	if m != nil && m.StuffId != nil {
		return *m.StuffId
	}
	return 0
}

func (m *FriendsRecord) GetCharmRank() int32 {
	if m != nil && m.CharmRank != nil {
		return *m.CharmRank
	}
	return 0
}

type BuyRecord struct {
	Gold                 *int32   `protobuf:"varint,1,req,name=gold" json:"gold,omitempty"`
	StuffId              *int32   `protobuf:"varint,2,req,name=stuff_id,json=stuffId" json:"stuff_id,omitempty"`
	StuffName            *int32   `protobuf:"varint,3,req,name=stuff_name,json=stuffName" json:"stuff_name,omitempty"`
	Num                  *int32   `protobuf:"varint,4,req,name=num" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BuyRecord) Reset()         { *m = BuyRecord{} }
func (m *BuyRecord) String() string { return proto.CompactTextString(m) }
func (*BuyRecord) ProtoMessage()    {}
func (*BuyRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{23}
}

func (m *BuyRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BuyRecord.Unmarshal(m, b)
}
func (m *BuyRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BuyRecord.Marshal(b, m, deterministic)
}
func (m *BuyRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BuyRecord.Merge(m, src)
}
func (m *BuyRecord) XXX_Size() int {
	return xxx_messageInfo_BuyRecord.Size(m)
}
func (m *BuyRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_BuyRecord.DiscardUnknown(m)
}

var xxx_messageInfo_BuyRecord proto.InternalMessageInfo

func (m *BuyRecord) GetGold() int32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *BuyRecord) GetStuffId() int32 {
	if m != nil && m.StuffId != nil {
		return *m.StuffId
	}
	return 0
}

func (m *BuyRecord) GetStuffName() int32 {
	if m != nil && m.StuffName != nil {
		return *m.StuffName
	}
	return 0
}

func (m *BuyRecord) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type SellRecord struct {
	Gold                 *int32   `protobuf:"varint,1,req,name=gold" json:"gold,omitempty"`
	Num                  *int32   `protobuf:"varint,2,req,name=num" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SellRecord) Reset()         { *m = SellRecord{} }
func (m *SellRecord) String() string { return proto.CompactTextString(m) }
func (*SellRecord) ProtoMessage()    {}
func (*SellRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{24}
}

func (m *SellRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SellRecord.Unmarshal(m, b)
}
func (m *SellRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SellRecord.Marshal(b, m, deterministic)
}
func (m *SellRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SellRecord.Merge(m, src)
}
func (m *SellRecord) XXX_Size() int {
	return xxx_messageInfo_SellRecord.Size(m)
}
func (m *SellRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_SellRecord.DiscardUnknown(m)
}

var xxx_messageInfo_SellRecord proto.InternalMessageInfo

func (m *SellRecord) GetGold() int32 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *SellRecord) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type ToyRecord struct {
	StuffId              *int32   `protobuf:"varint,1,req,name=stuff_id,json=stuffId" json:"stuff_id,omitempty"`
	StuffName            *int32   `protobuf:"varint,2,req,name=stuff_name,json=stuffName" json:"stuff_name,omitempty"`
	Num                  *int32   `protobuf:"varint,3,req,name=num" json:"num,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToyRecord) Reset()         { *m = ToyRecord{} }
func (m *ToyRecord) String() string { return proto.CompactTextString(m) }
func (*ToyRecord) ProtoMessage()    {}
func (*ToyRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{25}
}

func (m *ToyRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToyRecord.Unmarshal(m, b)
}
func (m *ToyRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToyRecord.Marshal(b, m, deterministic)
}
func (m *ToyRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToyRecord.Merge(m, src)
}
func (m *ToyRecord) XXX_Size() int {
	return xxx_messageInfo_ToyRecord.Size(m)
}
func (m *ToyRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_ToyRecord.DiscardUnknown(m)
}

var xxx_messageInfo_ToyRecord proto.InternalMessageInfo

func (m *ToyRecord) GetStuffId() int32 {
	if m != nil && m.StuffId != nil {
		return *m.StuffId
	}
	return 0
}

func (m *ToyRecord) GetStuffName() int32 {
	if m != nil && m.StuffName != nil {
		return *m.StuffName
	}
	return 0
}

func (m *ToyRecord) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

type Mail struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	FromUser             *int32   `protobuf:"varint,2,req,name=from_user,json=fromUser" json:"from_user,omitempty"`
	ToUser               *int32   `protobuf:"varint,3,req,name=to_user,json=toUser" json:"to_user,omitempty"`
	SentTime             *int32   `protobuf:"varint,4,req,name=sent_time,json=sentTime" json:"sent_time,omitempty"`
	Title                *string  `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Content              *string  `protobuf:"bytes,6,opt,name=content" json:"content,omitempty"`
	Type                 *int32   `protobuf:"varint,7,opt,name=type" json:"type,omitempty"`
	Diamond              *int64   `protobuf:"varint,8,opt,name=diamond" json:"diamond,omitempty"`
	Gold                 *int64   `protobuf:"varint,9,opt,name=gold" json:"gold,omitempty"`
	Items                []*Item  `protobuf:"bytes,10,rep,name=items" json:"items,omitempty"`
	Gifts                []*Gift  `protobuf:"bytes,11,rep,name=gifts" json:"gifts,omitempty"`
	Received             *int32   `protobuf:"varint,12,opt,name=received" json:"received,omitempty"`
	IsRead               *int32   `protobuf:"varint,13,opt,name=is_read,json=isRead" json:"is_read,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Mail) Reset()         { *m = Mail{} }
func (m *Mail) String() string { return proto.CompactTextString(m) }
func (*Mail) ProtoMessage()    {}
func (*Mail) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{26}
}

func (m *Mail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Mail.Unmarshal(m, b)
}
func (m *Mail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Mail.Marshal(b, m, deterministic)
}
func (m *Mail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Mail.Merge(m, src)
}
func (m *Mail) XXX_Size() int {
	return xxx_messageInfo_Mail.Size(m)
}
func (m *Mail) XXX_DiscardUnknown() {
	xxx_messageInfo_Mail.DiscardUnknown(m)
}

var xxx_messageInfo_Mail proto.InternalMessageInfo

func (m *Mail) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Mail) GetFromUser() int32 {
	if m != nil && m.FromUser != nil {
		return *m.FromUser
	}
	return 0
}

func (m *Mail) GetToUser() int32 {
	if m != nil && m.ToUser != nil {
		return *m.ToUser
	}
	return 0
}

func (m *Mail) GetSentTime() int32 {
	if m != nil && m.SentTime != nil {
		return *m.SentTime
	}
	return 0
}

func (m *Mail) GetTitle() string {
	if m != nil && m.Title != nil {
		return *m.Title
	}
	return ""
}

func (m *Mail) GetContent() string {
	if m != nil && m.Content != nil {
		return *m.Content
	}
	return ""
}

func (m *Mail) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Mail) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *Mail) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Mail) GetItems() []*Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Mail) GetGifts() []*Gift {
	if m != nil {
		return m.Gifts
	}
	return nil
}

func (m *Mail) GetReceived() int32 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *Mail) GetIsRead() int32 {
	if m != nil && m.IsRead != nil {
		return *m.IsRead
	}
	return 0
}

type Friend struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Type                 *int32   `protobuf:"varint,2,req,name=type" json:"type,omitempty"`
	Avatar               *string  `protobuf:"bytes,3,req,name=avatar" json:"avatar,omitempty"`
	Gold                 *int64   `protobuf:"varint,4,req,name=gold" json:"gold,omitempty"`
	IsOnline             *bool    `protobuf:"varint,5,req,name=is_online,json=isOnline" json:"is_online,omitempty"`
	Nick                 *string  `protobuf:"bytes,6,req,name=nick" json:"nick,omitempty"`
	RoomId               *int32   `protobuf:"varint,7,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	TableId              *int32   `protobuf:"varint,8,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	Sex                  *int32   `protobuf:"varint,9,opt,name=sex" json:"sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Friend) Reset()         { *m = Friend{} }
func (m *Friend) String() string { return proto.CompactTextString(m) }
func (*Friend) ProtoMessage()    {}
func (*Friend) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{27}
}

func (m *Friend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Friend.Unmarshal(m, b)
}
func (m *Friend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Friend.Marshal(b, m, deterministic)
}
func (m *Friend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Friend.Merge(m, src)
}
func (m *Friend) XXX_Size() int {
	return xxx_messageInfo_Friend.Size(m)
}
func (m *Friend) XXX_DiscardUnknown() {
	xxx_messageInfo_Friend.DiscardUnknown(m)
}

var xxx_messageInfo_Friend proto.InternalMessageInfo

func (m *Friend) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Friend) GetType() int32 {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return 0
}

func (m *Friend) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *Friend) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Friend) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *Friend) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *Friend) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *Friend) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *Friend) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

type Enemy struct {
	Uid                  *int32   `protobuf:"varint,1,req,name=uid" json:"uid,omitempty"`
	Avatar               *string  `protobuf:"bytes,2,req,name=avatar" json:"avatar,omitempty"`
	Gold                 *int64   `protobuf:"varint,3,req,name=gold" json:"gold,omitempty"`
	IsOnline             *bool    `protobuf:"varint,4,req,name=is_online,json=isOnline" json:"is_online,omitempty"`
	RoomId               *int32   `protobuf:"varint,5,opt,name=room_id,json=roomId" json:"room_id,omitempty"`
	TableId              *int32   `protobuf:"varint,6,opt,name=table_id,json=tableId" json:"table_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Enemy) Reset()         { *m = Enemy{} }
func (m *Enemy) String() string { return proto.CompactTextString(m) }
func (*Enemy) ProtoMessage()    {}
func (*Enemy) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{28}
}

func (m *Enemy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Enemy.Unmarshal(m, b)
}
func (m *Enemy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Enemy.Marshal(b, m, deterministic)
}
func (m *Enemy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Enemy.Merge(m, src)
}
func (m *Enemy) XXX_Size() int {
	return xxx_messageInfo_Enemy.Size(m)
}
func (m *Enemy) XXX_DiscardUnknown() {
	xxx_messageInfo_Enemy.DiscardUnknown(m)
}

var xxx_messageInfo_Enemy proto.InternalMessageInfo

func (m *Enemy) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *Enemy) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *Enemy) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *Enemy) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *Enemy) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *Enemy) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

type FriendApply struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	ApplyFrom            *int32   `protobuf:"varint,2,req,name=apply_from,json=applyFrom" json:"apply_from,omitempty"`
	ApplyFromNick        *string  `protobuf:"bytes,3,req,name=apply_from_nick,json=applyFromNick" json:"apply_from_nick,omitempty"`
	ApplyFromAvatar      *string  `protobuf:"bytes,4,req,name=apply_from_avatar,json=applyFromAvatar" json:"apply_from_avatar,omitempty"`
	To                   *int32   `protobuf:"varint,5,req,name=to" json:"to,omitempty"`
	Time                 *int32   `protobuf:"varint,6,req,name=time" json:"time,omitempty"`
	Message              *string  `protobuf:"bytes,7,req,name=message" json:"message,omitempty"`
	Gifts                []*Gift  `protobuf:"bytes,8,rep,name=gifts" json:"gifts,omitempty"`
	ApplyFromSex         *int32   `protobuf:"varint,9,opt,name=apply_from_sex,json=applyFromSex" json:"apply_from_sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendApply) Reset()         { *m = FriendApply{} }
func (m *FriendApply) String() string { return proto.CompactTextString(m) }
func (*FriendApply) ProtoMessage()    {}
func (*FriendApply) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{29}
}

func (m *FriendApply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendApply.Unmarshal(m, b)
}
func (m *FriendApply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendApply.Marshal(b, m, deterministic)
}
func (m *FriendApply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendApply.Merge(m, src)
}
func (m *FriendApply) XXX_Size() int {
	return xxx_messageInfo_FriendApply.Size(m)
}
func (m *FriendApply) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendApply.DiscardUnknown(m)
}

var xxx_messageInfo_FriendApply proto.InternalMessageInfo

func (m *FriendApply) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FriendApply) GetApplyFrom() int32 {
	if m != nil && m.ApplyFrom != nil {
		return *m.ApplyFrom
	}
	return 0
}

func (m *FriendApply) GetApplyFromNick() string {
	if m != nil && m.ApplyFromNick != nil {
		return *m.ApplyFromNick
	}
	return ""
}

func (m *FriendApply) GetApplyFromAvatar() string {
	if m != nil && m.ApplyFromAvatar != nil {
		return *m.ApplyFromAvatar
	}
	return ""
}

func (m *FriendApply) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *FriendApply) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *FriendApply) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *FriendApply) GetGifts() []*Gift {
	if m != nil {
		return m.Gifts
	}
	return nil
}

func (m *FriendApply) GetApplyFromSex() int32 {
	if m != nil && m.ApplyFromSex != nil {
		return *m.ApplyFromSex
	}
	return 0
}

type FriendMessage struct {
	MessageId            *int32   `protobuf:"varint,1,req,name=message_id,json=messageId" json:"message_id,omitempty"`
	FromUser             *int32   `protobuf:"varint,2,req,name=from_user,json=fromUser" json:"from_user,omitempty"`
	FromUserNick         *string  `protobuf:"bytes,3,req,name=from_user_nick,json=fromUserNick" json:"from_user_nick,omitempty"`
	FromUserAvatar       *string  `protobuf:"bytes,4,req,name=from_user_avatar,json=fromUserAvatar" json:"from_user_avatar,omitempty"`
	To                   *int32   `protobuf:"varint,5,req,name=to" json:"to,omitempty"`
	Time                 *int32   `protobuf:"varint,6,req,name=time" json:"time,omitempty"`
	Message              *string  `protobuf:"bytes,7,req,name=message" json:"message,omitempty"`
	FromUserSex          *int32   `protobuf:"varint,8,opt,name=from_user_sex,json=fromUserSex" json:"from_user_sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FriendMessage) Reset()         { *m = FriendMessage{} }
func (m *FriendMessage) String() string { return proto.CompactTextString(m) }
func (*FriendMessage) ProtoMessage()    {}
func (*FriendMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{30}
}

func (m *FriendMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FriendMessage.Unmarshal(m, b)
}
func (m *FriendMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FriendMessage.Marshal(b, m, deterministic)
}
func (m *FriendMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FriendMessage.Merge(m, src)
}
func (m *FriendMessage) XXX_Size() int {
	return xxx_messageInfo_FriendMessage.Size(m)
}
func (m *FriendMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_FriendMessage.DiscardUnknown(m)
}

var xxx_messageInfo_FriendMessage proto.InternalMessageInfo

func (m *FriendMessage) GetMessageId() int32 {
	if m != nil && m.MessageId != nil {
		return *m.MessageId
	}
	return 0
}

func (m *FriendMessage) GetFromUser() int32 {
	if m != nil && m.FromUser != nil {
		return *m.FromUser
	}
	return 0
}

func (m *FriendMessage) GetFromUserNick() string {
	if m != nil && m.FromUserNick != nil {
		return *m.FromUserNick
	}
	return ""
}

func (m *FriendMessage) GetFromUserAvatar() string {
	if m != nil && m.FromUserAvatar != nil {
		return *m.FromUserAvatar
	}
	return ""
}

func (m *FriendMessage) GetTo() int32 {
	if m != nil && m.To != nil {
		return *m.To
	}
	return 0
}

func (m *FriendMessage) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *FriendMessage) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *FriendMessage) GetFromUserSex() int32 {
	if m != nil && m.FromUserSex != nil {
		return *m.FromUserSex
	}
	return 0
}

type RankPlayer struct {
	Rank                 *int32   `protobuf:"varint,1,req,name=rank" json:"rank,omitempty"`
	Uid                  *int32   `protobuf:"varint,2,req,name=uid" json:"uid,omitempty"`
	Nick                 *string  `protobuf:"bytes,3,req,name=nick" json:"nick,omitempty"`
	Avatar               *string  `protobuf:"bytes,4,req,name=avatar" json:"avatar,omitempty"`
	Gold                 *int64   `protobuf:"varint,5,req,name=gold" json:"gold,omitempty"`
	Charm                *int32   `protobuf:"varint,6,req,name=charm" json:"charm,omitempty"`
	RankReward           *string  `protobuf:"bytes,7,opt,name=rank_reward,json=rankReward" json:"rank_reward,omitempty"`
	MoneyMaked           *int64   `protobuf:"varint,8,opt,name=money_maked,json=moneyMaked" json:"money_maked,omitempty"`
	Vip                  *int32   `protobuf:"varint,9,opt,name=vip" json:"vip,omitempty"`
	VipExp               *int32   `protobuf:"varint,10,opt,name=vip_exp,json=vipExp" json:"vip_exp,omitempty"`
	Charge               *int32   `protobuf:"varint,11,opt,name=charge" json:"charge,omitempty"`
	WarWin               *int64   `protobuf:"varint,12,opt,name=war_win,json=warWin" json:"war_win,omitempty"`
	LotteryGold          *int64   `protobuf:"varint,13,opt,name=lottery_gold,json=lotteryGold" json:"lottery_gold,omitempty"`
	LotteryCreateTime    *int64   `protobuf:"varint,14,opt,name=lottery_create_time,json=lotteryCreateTime" json:"lottery_create_time,omitempty"`
	TexasGold            *int64   `protobuf:"varint,15,opt,name=texas_gold,json=texasGold" json:"texas_gold,omitempty"`
	Sex                  *int32   `protobuf:"varint,16,opt,name=sex" json:"sex,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RankPlayer) Reset()         { *m = RankPlayer{} }
func (m *RankPlayer) String() string { return proto.CompactTextString(m) }
func (*RankPlayer) ProtoMessage()    {}
func (*RankPlayer) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{31}
}

func (m *RankPlayer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RankPlayer.Unmarshal(m, b)
}
func (m *RankPlayer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RankPlayer.Marshal(b, m, deterministic)
}
func (m *RankPlayer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RankPlayer.Merge(m, src)
}
func (m *RankPlayer) XXX_Size() int {
	return xxx_messageInfo_RankPlayer.Size(m)
}
func (m *RankPlayer) XXX_DiscardUnknown() {
	xxx_messageInfo_RankPlayer.DiscardUnknown(m)
}

var xxx_messageInfo_RankPlayer proto.InternalMessageInfo

func (m *RankPlayer) GetRank() int32 {
	if m != nil && m.Rank != nil {
		return *m.Rank
	}
	return 0
}

func (m *RankPlayer) GetUid() int32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *RankPlayer) GetNick() string {
	if m != nil && m.Nick != nil {
		return *m.Nick
	}
	return ""
}

func (m *RankPlayer) GetAvatar() string {
	if m != nil && m.Avatar != nil {
		return *m.Avatar
	}
	return ""
}

func (m *RankPlayer) GetGold() int64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *RankPlayer) GetCharm() int32 {
	if m != nil && m.Charm != nil {
		return *m.Charm
	}
	return 0
}

func (m *RankPlayer) GetRankReward() string {
	if m != nil && m.RankReward != nil {
		return *m.RankReward
	}
	return ""
}

func (m *RankPlayer) GetMoneyMaked() int64 {
	if m != nil && m.MoneyMaked != nil {
		return *m.MoneyMaked
	}
	return 0
}

func (m *RankPlayer) GetVip() int32 {
	if m != nil && m.Vip != nil {
		return *m.Vip
	}
	return 0
}

func (m *RankPlayer) GetVipExp() int32 {
	if m != nil && m.VipExp != nil {
		return *m.VipExp
	}
	return 0
}

func (m *RankPlayer) GetCharge() int32 {
	if m != nil && m.Charge != nil {
		return *m.Charge
	}
	return 0
}

func (m *RankPlayer) GetWarWin() int64 {
	if m != nil && m.WarWin != nil {
		return *m.WarWin
	}
	return 0
}

func (m *RankPlayer) GetLotteryGold() int64 {
	if m != nil && m.LotteryGold != nil {
		return *m.LotteryGold
	}
	return 0
}

func (m *RankPlayer) GetLotteryCreateTime() int64 {
	if m != nil && m.LotteryCreateTime != nil {
		return *m.LotteryCreateTime
	}
	return 0
}

func (m *RankPlayer) GetTexasGold() int64 {
	if m != nil && m.TexasGold != nil {
		return *m.TexasGold
	}
	return 0
}

func (m *RankPlayer) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

type ChargeItem struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Diamond              *int64   `protobuf:"varint,2,req,name=diamond" json:"diamond,omitempty"`
	Description          *string  `protobuf:"bytes,3,req,name=description" json:"description,omitempty"`
	Money                *int32   `protobuf:"varint,4,req,name=money" json:"money,omitempty"`
	ExtraDiamond         *int32   `protobuf:"varint,5,opt,name=extra_diamond,json=extraDiamond" json:"extra_diamond,omitempty"`
	ExtraItems           *Item    `protobuf:"bytes,6,opt,name=extra_items,json=extraItems" json:"extra_items,omitempty"`
	Icon                 *string  `protobuf:"bytes,7,opt,name=icon" json:"icon,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChargeItem) Reset()         { *m = ChargeItem{} }
func (m *ChargeItem) String() string { return proto.CompactTextString(m) }
func (*ChargeItem) ProtoMessage()    {}
func (*ChargeItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{32}
}

func (m *ChargeItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChargeItem.Unmarshal(m, b)
}
func (m *ChargeItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChargeItem.Marshal(b, m, deterministic)
}
func (m *ChargeItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChargeItem.Merge(m, src)
}
func (m *ChargeItem) XXX_Size() int {
	return xxx_messageInfo_ChargeItem.Size(m)
}
func (m *ChargeItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ChargeItem.DiscardUnknown(m)
}

var xxx_messageInfo_ChargeItem proto.InternalMessageInfo

func (m *ChargeItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ChargeItem) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *ChargeItem) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *ChargeItem) GetMoney() int32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *ChargeItem) GetExtraDiamond() int32 {
	if m != nil && m.ExtraDiamond != nil {
		return *m.ExtraDiamond
	}
	return 0
}

func (m *ChargeItem) GetExtraItems() *Item {
	if m != nil {
		return m.ExtraItems
	}
	return nil
}

func (m *ChargeItem) GetIcon() string {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return ""
}

type LuckyGold struct {
	LuckyType            *int32   `protobuf:"varint,1,req,name=lucky_type,json=luckyType" json:"lucky_type,omitempty"`
	TotalLuckyGold       *int32   `protobuf:"varint,2,req,name=total_lucky_gold,json=totalLuckyGold" json:"total_lucky_gold,omitempty"`
	LuckyGold            *int32   `protobuf:"varint,3,req,name=lucky_gold,json=luckyGold" json:"lucky_gold,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LuckyGold) Reset()         { *m = LuckyGold{} }
func (m *LuckyGold) String() string { return proto.CompactTextString(m) }
func (*LuckyGold) ProtoMessage()    {}
func (*LuckyGold) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{33}
}

func (m *LuckyGold) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LuckyGold.Unmarshal(m, b)
}
func (m *LuckyGold) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LuckyGold.Marshal(b, m, deterministic)
}
func (m *LuckyGold) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LuckyGold.Merge(m, src)
}
func (m *LuckyGold) XXX_Size() int {
	return xxx_messageInfo_LuckyGold.Size(m)
}
func (m *LuckyGold) XXX_DiscardUnknown() {
	xxx_messageInfo_LuckyGold.DiscardUnknown(m)
}

var xxx_messageInfo_LuckyGold proto.InternalMessageInfo

func (m *LuckyGold) GetLuckyType() int32 {
	if m != nil && m.LuckyType != nil {
		return *m.LuckyType
	}
	return 0
}

func (m *LuckyGold) GetTotalLuckyGold() int32 {
	if m != nil && m.TotalLuckyGold != nil {
		return *m.TotalLuckyGold
	}
	return 0
}

func (m *LuckyGold) GetLuckyGold() int32 {
	if m != nil && m.LuckyGold != nil {
		return *m.LuckyGold
	}
	return 0
}

type FlowItem struct {
	Id                   *int32   `protobuf:"varint,1,req,name=id" json:"id,omitempty"`
	Name                 *string  `protobuf:"bytes,2,req,name=name" json:"name,omitempty"`
	Icon                 *int32   `protobuf:"varint,3,req,name=icon" json:"icon,omitempty"`
	Card                 *int32   `protobuf:"varint,4,req,name=card" json:"card,omitempty"`
	Stack                *int32   `protobuf:"varint,5,req,name=stack" json:"stack,omitempty"`
	Used                 *int32   `protobuf:"varint,6,req,name=used" json:"used,omitempty"`
	Description          *string  `protobuf:"bytes,7,opt,name=description" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlowItem) Reset()         { *m = FlowItem{} }
func (m *FlowItem) String() string { return proto.CompactTextString(m) }
func (*FlowItem) ProtoMessage()    {}
func (*FlowItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_0605f6bcb0ae6db1, []int{34}
}

func (m *FlowItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlowItem.Unmarshal(m, b)
}
func (m *FlowItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlowItem.Marshal(b, m, deterministic)
}
func (m *FlowItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlowItem.Merge(m, src)
}
func (m *FlowItem) XXX_Size() int {
	return xxx_messageInfo_FlowItem.Size(m)
}
func (m *FlowItem) XXX_DiscardUnknown() {
	xxx_messageInfo_FlowItem.DiscardUnknown(m)
}

var xxx_messageInfo_FlowItem proto.InternalMessageInfo

func (m *FlowItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *FlowItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *FlowItem) GetIcon() int32 {
	if m != nil && m.Icon != nil {
		return *m.Icon
	}
	return 0
}

func (m *FlowItem) GetCard() int32 {
	if m != nil && m.Card != nil {
		return *m.Card
	}
	return 0
}

func (m *FlowItem) GetStack() int32 {
	if m != nil && m.Stack != nil {
		return *m.Stack
	}
	return 0
}

func (m *FlowItem) GetUsed() int32 {
	if m != nil && m.Used != nil {
		return *m.Used
	}
	return 0
}

func (m *FlowItem) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Player)(nil), "pb.Player")
	proto.RegisterType((*PlayerBrief)(nil), "pb.PlayerBrief")
	proto.RegisterType((*Result)(nil), "pb.Result")
	proto.RegisterType((*Gift)(nil), "pb.Gift")
	proto.RegisterType((*Announcement)(nil), "pb.Announcement")
	proto.RegisterType((*Notification)(nil), "pb.Notification")
	proto.RegisterType((*Reward)(nil), "pb.Reward")
	proto.RegisterType((*SigninReward)(nil), "pb.SigninReward")
	proto.RegisterType((*Item)(nil), "pb.Item")
	proto.RegisterType((*ShopItem)(nil), "pb.ShopItem")
	proto.RegisterType((*Trade)(nil), "pb.Trade")
	proto.RegisterType((*Poker)(nil), "pb.Poker")
	proto.RegisterType((*PlayerAction)(nil), "pb.PlayerAction")
	proto.RegisterType((*Chip)(nil), "pb.Chip")
	proto.RegisterType((*GameRound)(nil), "pb.GameRound")
	proto.RegisterType((*Gambler)(nil), "pb.Gambler")
	proto.RegisterType((*Table)(nil), "pb.Table")
	proto.RegisterType((*GoldFlower)(nil), "pb.GoldFlower")
	proto.RegisterType((*PlayerGold)(nil), "pb.PlayerGold")
	proto.RegisterType((*PlayerPokers)(nil), "pb.PlayerPokers")
	proto.RegisterType((*GameServer)(nil), "pb.GameServer")
	proto.RegisterType((*CharmRecord)(nil), "pb.CharmRecord")
	proto.RegisterType((*FriendsRecord)(nil), "pb.FriendsRecord")
	proto.RegisterType((*BuyRecord)(nil), "pb.BuyRecord")
	proto.RegisterType((*SellRecord)(nil), "pb.SellRecord")
	proto.RegisterType((*ToyRecord)(nil), "pb.ToyRecord")
	proto.RegisterType((*Mail)(nil), "pb.Mail")
	proto.RegisterType((*Friend)(nil), "pb.Friend")
	proto.RegisterType((*Enemy)(nil), "pb.Enemy")
	proto.RegisterType((*FriendApply)(nil), "pb.FriendApply")
	proto.RegisterType((*FriendMessage)(nil), "pb.FriendMessage")
	proto.RegisterType((*RankPlayer)(nil), "pb.RankPlayer")
	proto.RegisterType((*ChargeItem)(nil), "pb.ChargeItem")
	proto.RegisterType((*LuckyGold)(nil), "pb.LuckyGold")
	proto.RegisterType((*FlowItem)(nil), "pb.FlowItem")
}

func init() { proto.RegisterFile("struct.proto", fileDescriptor_0605f6bcb0ae6db1) }

var fileDescriptor_0605f6bcb0ae6db1 = []byte{
	// 2487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x59, 0xcd, 0x8e, 0xdc, 0xc6,
	0xf1, 0xc7, 0x70, 0x66, 0x38, 0x64, 0xcd, 0xec, 0xec, 0x9a, 0xd6, 0x5f, 0xa6, 0xe5, 0xff, 0x7a,
	0xd7, 0xb4, 0x9c, 0xac, 0x02, 0x5b, 0x07, 0x01, 0xb9, 0x47, 0x5a, 0x5b, 0x1b, 0x01, 0x91, 0x62,
	0x70, 0x65, 0xf8, 0x48, 0xf4, 0x92, 0xbd, 0x3b, 0x8d, 0x9d, 0x21, 0x69, 0x76, 0xcf, 0x7e, 0x00,
	0x79, 0x8a, 0x20, 0x08, 0x90, 0x20, 0x87, 0x20, 0x87, 0x1c, 0x92, 0x4b, 0x9e, 0x21, 0xd7, 0x5c,
	0xe2, 0xbc, 0x45, 0x1e, 0x21, 0x40, 0x02, 0x04, 0x55, 0xd5, 0xfc, 0x98, 0x0f, 0x49, 0xb0, 0xa3,
	0xd3, 0x74, 0x7d, 0xb0, 0xbb, 0xba, 0xfa, 0xd7, 0xd5, 0x55, 0x35, 0x30, 0xd1, 0xa6, 0x5a, 0xa6,
	0xe6, 0x61, 0x59, 0x15, 0xa6, 0x08, 0x9c, 0xf2, 0xec, 0xde, 0x34, 0x2d, 0x72, 0x6d, 0x44, 0x6e,
	0x79, 0xd1, 0xb7, 0x03, 0x70, 0xbf, 0x9c, 0x8b, 0x5b, 0x59, 0x05, 0x7b, 0xd0, 0x5f, 0xaa, 0x2c,
	0xec, 0x1d, 0x3a, 0x47, 0xc3, 0x18, 0x87, 0xc1, 0x5d, 0x70, 0x17, 0xc5, 0x99, 0x9a, 0xcb, 0xd0,
	0x39, 0xec, 0x1d, 0xf9, 0xb1, 0xa5, 0x82, 0x00, 0x06, 0xb9, 0x4a, 0x2f, 0xc3, 0xfe, 0xa1, 0x73,
	0xe4, 0xc7, 0x34, 0x46, 0x5d, 0x71, 0x25, 0x8c, 0xa8, 0xc2, 0x01, 0x71, 0x2d, 0x85, 0xba, 0x17,
	0xc5, 0x3c, 0x0b, 0x87, 0x87, 0xce, 0x51, 0x3f, 0xa6, 0x71, 0x10, 0xc2, 0x28, 0x53, 0x62, 0x51,
	0xe4, 0x59, 0xe8, 0x12, 0xbb, 0x26, 0xd1, 0x86, 0x2b, 0x55, 0x86, 0x23, 0xb6, 0xe1, 0x4a, 0x95,
	0xc1, 0x1d, 0x18, 0xa6, 0x33, 0x51, 0x2d, 0x42, 0x8f, 0x78, 0x4c, 0xa0, 0x9e, 0xbc, 0x29, 0x43,
	0x60, 0x3d, 0x79, 0x53, 0x06, 0x07, 0x30, 0x36, 0x85, 0x11, 0xf3, 0xe4, 0x42, 0x2c, 0xa4, 0x0e,
	0xc7, 0x24, 0x01, 0x62, 0x9d, 0x20, 0x27, 0xf8, 0x00, 0xfc, 0x6b, 0x95, 0x5b, 0xf1, 0x84, 0xc4,
	0xde, 0xb5, 0xca, 0x59, 0x78, 0x00, 0xe3, 0x6b, 0x29, 0xe6, 0x66, 0x96, 0x54, 0x22, 0xbf, 0x0c,
	0x77, 0x0e, 0x7b, 0xf8, 0x35, 0xb3, 0x62, 0x91, 0x5f, 0x06, 0xef, 0x03, 0x2a, 0xb3, 0x74, 0x4a,
	0xd2, 0xd1, 0xb5, 0xca, 0x49, 0xb4, 0x0f, 0x40, 0x46, 0xb1, 0x70, 0x97, 0x84, 0x3e, 0x71, 0x48,
	0x7c, 0x00, 0x63, 0x24, 0x2e, 0x24, 0xcb, 0xf7, 0x78, 0x6a, 0x66, 0x91, 0x42, 0x00, 0x03, 0xad,
	0x2e, 0xf2, 0xf0, 0x1d, 0xf2, 0x31, 0x8d, 0x71, 0x7f, 0x5a, 0xde, 0x84, 0x01, 0x29, 0xe3, 0x30,
	0xb8, 0x07, 0xde, 0x99, 0xaa, 0xcc, 0x2c, 0x13, 0xb7, 0xe1, 0xbb, 0xa4, 0xd9, 0xd0, 0xe8, 0x4f,
	0x91, 0x65, 0x95, 0xd4, 0x3a, 0xbc, 0x43, 0xa2, 0x9a, 0x0c, 0x3e, 0x84, 0xe1, 0x85, 0x3a, 0x37,
	0x3a, 0xfc, 0xbf, 0xc3, 0xfe, 0xd1, 0xf8, 0x91, 0xf7, 0xb0, 0x3c, 0x7b, 0x78, 0xa2, 0xce, 0x4d,
	0xcc, 0xec, 0x60, 0x1f, 0x06, 0x67, 0x52, 0x9b, 0xf0, 0x2e, 0x89, 0x7d, 0x14, 0x7f, 0x59, 0x5c,
	0xca, 0x2a, 0x26, 0x36, 0xfa, 0x4c, 0xe9, 0xe4, 0xbc, 0x52, 0x32, 0xcf, 0xc2, 0xf7, 0x0e, 0x7b,
	0x47, 0x5e, 0xec, 0x29, 0xfd, 0x94, 0xe8, 0xe0, 0x3d, 0x18, 0x5d, 0xa9, 0x32, 0xc1, 0x73, 0x08,
	0xc9, 0x4e, 0xf7, 0x4a, 0x95, 0x5f, 0xdc, 0x94, 0xd1, 0xbf, 0x7a, 0x30, 0x66, 0x4c, 0x3d, 0xa9,
	0x94, 0x3c, 0xdf, 0x0e, 0x2c, 0x0b, 0x16, 0x67, 0x2b, 0x58, 0xfa, 0x1d, 0xb0, 0xa0, 0x7b, 0xa4,
	0x30, 0x04, 0xab, 0x61, 0x4c, 0xe3, 0x06, 0x80, 0xc3, 0x0e, 0x00, 0x2d, 0x74, 0xdc, 0x16, 0x3a,
	0x1d, 0x98, 0x8d, 0x0e, 0x7b, 0x5d, 0x98, 0x75, 0x4c, 0xf7, 0xba, 0xa6, 0xd7, 0x7e, 0xf7, 0x5b,
	0xbf, 0x37, 0x48, 0xeb, 0xd5, 0x48, 0xfb, 0x00, 0xfc, 0xf3, 0x79, 0x71, 0x9d, 0xa4, 0xa2, 0xca,
	0xc2, 0x31, 0xf1, 0x3d, 0x64, 0x1c, 0x8b, 0x2a, 0x8b, 0xfe, 0xe9, 0x80, 0x1b, 0x4b, 0xbd, 0x9c,
	0x9b, 0x66, 0x33, 0x3d, 0x5a, 0x7b, 0x03, 0xf9, 0xce, 0x2b, 0x4d, 0xea, 0xaf, 0x9b, 0x84, 0xfb,
	0x1a, 0xb0, 0x01, 0xb8, 0xaf, 0x07, 0x30, 0x56, 0x46, 0x2e, 0x74, 0x22, 0xb2, 0x4c, 0xe2, 0xcd,
	0x6a, 0x8e, 0xf6, 0x99, 0x91, 0x8b, 0x18, 0x48, 0xf8, 0x18, 0x65, 0xa8, 0x4a, 0x07, 0x6d, 0x55,
	0xdd, 0x35, 0x14, 0x00, 0x09, 0x59, 0xf5, 0x33, 0xd8, 0xe1, 0x59, 0x2b, 0xb9, 0x28, 0xae, 0x24,
	0xfa, 0x6c, 0x75, 0xde, 0x09, 0x89, 0x63, 0x96, 0x12, 0x34, 0xf2, 0xb4, 0x4a, 0x68, 0x8b, 0x1e,
	0xed, 0xc5, 0x43, 0xc6, 0x09, 0x6e, 0xf3, 0x23, 0x98, 0x90, 0xb0, 0xde, 0xab, 0x4f, 0xf2, 0x31,
	0xf2, 0x3e, 0xb7, 0xfb, 0xbd, 0x0f, 0x53, 0x52, 0x69, 0x5d, 0xc9, 0x2e, 0xa6, 0x0f, 0x9f, 0x5a,
	0x77, 0xbe, 0xde, 0xd7, 0x2f, 0x61, 0x80, 0xbb, 0x08, 0xa6, 0xe0, 0x34, 0xf0, 0x72, 0x14, 0x21,
	0x26, 0x17, 0x0b, 0x69, 0xb1, 0x45, 0x63, 0xe4, 0xa9, 0xb4, 0xc8, 0xeb, 0x90, 0x85, 0x63, 0x0a,
	0x2d, 0xc5, 0x32, 0xaf, 0xa1, 0xc5, 0x44, 0xf4, 0xb7, 0x1e, 0x4c, 0x1e, 0xe7, 0x79, 0xb1, 0xcc,
	0x53, 0xb9, 0x90, 0xf9, 0xe6, 0xf4, 0xf7, 0xc0, 0x4b, 0x85, 0x91, 0x17, 0x45, 0x75, 0x6b, 0x97,
	0x68, 0x68, 0x9c, 0xd2, 0x28, 0x33, 0x97, 0x76, 0x1d, 0x26, 0xf0, 0xd4, 0xd3, 0x22, 0x37, 0xd2,
	0x2e, 0xe5, 0xc7, 0x35, 0x49, 0xe0, 0x2e, 0x2a, 0x43, 0x40, 0x46, 0x70, 0x17, 0x95, 0xc1, 0x78,
	0x32, 0x13, 0x3a, 0x11, 0xa9, 0x51, 0x45, 0x6e, 0xf1, 0xec, 0xcf, 0x84, 0x7e, 0x4c, 0x0c, 0xba,
	0x3b, 0x2c, 0x1a, 0x71, 0x50, 0x66, 0x0a, 0x97, 0x2e, 0x8b, 0x72, 0x59, 0xd6, 0x81, 0x92, 0x88,
	0xe8, 0x97, 0x3d, 0x98, 0xbc, 0x28, 0x8c, 0x3a, 0x57, 0xa9, 0x20, 0xb5, 0x07, 0xb0, 0x47, 0xb3,
	0x77, 0x76, 0x48, 0x08, 0x1d, 0xc6, 0xbb, 0xb8, 0x46, 0x77, 0xe3, 0xef, 0x83, 0x87, 0xaa, 0x0b,
	0xa1, 0xe6, 0x84, 0xd6, 0x61, 0x3c, 0x9a, 0x09, 0xfd, 0x5c, 0xa8, 0x79, 0x6d, 0x63, 0x25, 0xaf,
	0xf1, 0x60, 0x18, 0xb0, 0x68, 0x63, 0x4c, 0x8c, 0x5a, 0x6c, 0x03, 0xc7, 0xa0, 0x11, 0x73, 0xe4,
	0x88, 0x7e, 0x4b, 0x97, 0x84, 0x34, 0xbf, 0x8b, 0x73, 0xeb, 0x73, 0xed, 0x77, 0xce, 0xf5, 0x10,
	0xc6, 0x99, 0xd4, 0x69, 0xa5, 0x4a, 0x72, 0x09, 0xbb, 0xb7, 0xcb, 0xea, 0x3c, 0x40, 0xbd, 0xed,
	0x0f, 0xd0, 0xca, 0x35, 0xfc, 0x10, 0x86, 0x04, 0xf3, 0x0d, 0xf4, 0x33, 0xbb, 0x0d, 0xa8, 0xde,
	0xf6, 0x80, 0x7a, 0x07, 0x86, 0xda, 0x08, 0x23, 0x43, 0x9f, 0x4f, 0x81, 0x88, 0xce, 0x99, 0x81,
	0x8d, 0x77, 0x69, 0x6d, 0x1b, 0xa1, 0x92, 0x91, 0x4d, 0xe3, 0xe8, 0x2f, 0x3d, 0x98, 0x9c, 0xaa,
	0x8b, 0x5c, 0xe5, 0xd6, 0x45, 0x7b, 0xd0, 0xc7, 0xa0, 0x6f, 0xc3, 0x27, 0xc6, 0xfb, 0xb5, 0x4d,
	0x3b, 0xaf, 0xde, 0x74, 0x7f, 0xfb, 0xab, 0x3b, 0x58, 0x7d, 0x75, 0x9b, 0x4d, 0x0f, 0xdf, 0xb0,
	0x69, 0x77, 0xeb, 0xa6, 0xa3, 0x2b, 0x18, 0xa0, 0xfa, 0xdb, 0xbd, 0x88, 0xeb, 0xbb, 0x1c, 0x12,
	0xda, 0xbb, 0xac, 0xe8, 0xdf, 0x3d, 0xf0, 0x4e, 0x67, 0x45, 0xb9, 0x75, 0xf1, 0xcf, 0xc0, 0x47,
	0xeb, 0x13, 0x73, 0x5b, 0xb2, 0x05, 0xd3, 0x47, 0x7b, 0x68, 0x78, 0xfd, 0xc1, 0xcb, 0xdb, 0x52,
	0xc6, 0x9e, 0xb2, 0xa3, 0xe0, 0xff, 0x61, 0x80, 0x63, 0xc2, 0x72, 0xd7, 0x05, 0xc4, 0xc5, 0x38,
	0xa4, 0x67, 0x45, 0xc9, 0xd1, 0x6e, 0xc0, 0xd1, 0x0e, 0x19, 0x27, 0x6b, 0x8e, 0x1d, 0xae, 0x3a,
	0xb6, 0x3e, 0x06, 0xb7, 0x73, 0x0c, 0xfb, 0x00, 0xf2, 0xc6, 0x54, 0xa2, 0x1b, 0x39, 0x7d, 0xe2,
	0xd0, 0x64, 0x0f, 0x60, 0xcc, 0x62, 0x3e, 0x11, 0x7f, 0x3d, 0xb8, 0x93, 0x10, 0x87, 0x3a, 0xfa,
	0x73, 0x0f, 0x86, 0x2f, 0x2b, 0x91, 0xc9, 0x6d, 0x8e, 0x6f, 0xb6, 0x3d, 0x8c, 0x69, 0xfc, 0x1d,
	0x21, 0x71, 0x17, 0x5c, 0x2d, 0xe7, 0x73, 0x59, 0xd9, 0xd0, 0x64, 0x29, 0xcc, 0x66, 0x78, 0x94,
	0xd0, 0xc9, 0xba, 0x74, 0x8a, 0xc0, 0xac, 0x17, 0x78, 0xbe, 0x9d, 0x77, 0x6c, 0xb4, 0x92, 0x15,
	0xfc, 0x18, 0x86, 0x94, 0x5a, 0xe0, 0xd4, 0x18, 0xc2, 0x65, 0x65, 0x0d, 0xb6, 0x14, 0xa2, 0xe0,
	0x4a, 0xcc, 0x97, 0xb5, 0xd5, 0x4c, 0x44, 0xdf, 0xc0, 0x84, 0x73, 0x09, 0x1b, 0xfe, 0x36, 0x93,
	0x89, 0x4f, 0x9a, 0xcb, 0xc5, 0xa7, 0xbc, 0x83, 0xce, 0x7a, 0x22, 0x0d, 0x7f, 0xd0, 0x8d, 0x8f,
	0x85, 0x99, 0xc9, 0xca, 0x46, 0x2b, 0x26, 0x1a, 0xaf, 0x0c, 0x5a, 0xaf, 0x44, 0x9f, 0xc2, 0xe0,
	0x78, 0xa6, 0xca, 0x2d, 0x4b, 0xd5, 0xda, 0x4e, 0x47, 0xfb, 0x77, 0x3d, 0xf0, 0x31, 0x89, 0x8c,
	0x8b, 0x65, 0x9e, 0xe1, 0x2a, 0x15, 0x0e, 0xec, 0x57, 0x4c, 0x04, 0x3f, 0x84, 0xdd, 0x74, 0x59,
	0x55, 0x32, 0x37, 0x98, 0x7f, 0x9e, 0xa1, 0x5b, 0x79, 0x93, 0x53, 0xcb, 0x3e, 0x61, 0x6e, 0xf0,
	0x03, 0xd8, 0x35, 0xcb, 0x2a, 0x4f, 0xb4, 0x11, 0x95, 0x49, 0x8c, 0xb2, 0xd1, 0x6e, 0x18, 0xef,
	0x20, 0xfb, 0x14, 0xb9, 0x2f, 0xd5, 0x42, 0x06, 0x47, 0xb0, 0x47, 0x7a, 0x95, 0x5c, 0x08, 0x95,
	0xb3, 0x22, 0x5f, 0x9e, 0x29, 0xf2, 0x63, 0x62, 0xa3, 0x66, 0xf4, 0x1b, 0x07, 0x46, 0xf5, 0xec,
	0xaf, 0xde, 0x50, 0x37, 0x3b, 0x7f, 0x1f, 0xbc, 0x33, 0x69, 0x92, 0x0e, 0x70, 0x47, 0x67, 0xd2,
	0x10, 0x38, 0x39, 0x1f, 0xcc, 0xa4, 0xc0, 0x1d, 0xe0, 0x3b, 0x43, 0xf9, 0xe0, 0xe7, 0x44, 0xe3,
	0xc9, 0x2b, 0x9d, 0x68, 0x29, 0x73, 0x0a, 0x7e, 0x5e, 0xec, 0x2a, 0x7d, 0x2a, 0x65, 0x1e, 0x7c,
	0x08, 0x63, 0xa5, 0x93, 0x0b, 0x75, 0x25, 0xf3, 0x64, 0xc9, 0x49, 0xbb, 0x17, 0xfb, 0x4a, 0x9f,
	0x20, 0xe7, 0xab, 0xd2, 0x7e, 0x78, 0x8e, 0xcf, 0xcc, 0xb8, 0xfe, 0xf0, 0x29, 0xbe, 0x32, 0x87,
	0x30, 0xc1, 0x19, 0x67, 0xc5, 0x75, 0x32, 0x13, 0x79, 0x46, 0x59, 0xbb, 0x17, 0x83, 0xd2, 0xa7,
	0xb3, 0xe2, 0xfa, 0xa7, 0x22, 0x6f, 0x93, 0xc3, 0x9d, 0x4e, 0x72, 0x78, 0x04, 0x6e, 0x89, 0x40,
	0xd3, 0x94, 0xa8, 0x8f, 0xf9, 0xd6, 0x33, 0x86, 0x08, 0x80, 0x3a, 0xb6, 0xf2, 0xe8, 0xf7, 0x78,
	0x81, 0xc4, 0xd9, 0x7c, 0xf3, 0x02, 0x3d, 0x80, 0x51, 0x49, 0x5f, 0xe8, 0xd0, 0xa1, 0x1b, 0xb8,
	0xdb, 0x4e, 0x42, 0x49, 0x6d, 0x5c, 0xcb, 0x83, 0x4f, 0x01, 0x0c, 0xce, 0xc1, 0x81, 0xa6, 0xdf,
	0x42, 0x90, 0x66, 0xa6, 0x28, 0xe3, 0x9b, 0x7a, 0x18, 0x3c, 0x04, 0x40, 0xc7, 0xda, 0x0b, 0x30,
	0x20, 0x03, 0xa7, 0x14, 0x4f, 0x8b, 0x79, 0xf6, 0x94, 0xb8, 0x71, 0x47, 0x23, 0xfa, 0xab, 0x03,
	0xd0, 0x8a, 0x30, 0x78, 0x74, 0xa0, 0xc1, 0xf6, 0xfa, 0xba, 0x81, 0xc5, 0xc7, 0x35, 0xfa, 0x10,
	0x5d, 0x63, 0x36, 0xa3, 0xc1, 0x66, 0x0b, 0x46, 0xcf, 0x82, 0x50, 0x87, 0x7d, 0xda, 0xdc, 0xd8,
	0xea, 0x21, 0x2f, 0x6e, 0x84, 0x18, 0xf6, 0xd3, 0x99, 0x2a, 0x75, 0x38, 0x68, 0x83, 0x10, 0x5e,
	0x8c, 0x98, 0xd9, 0xc1, 0xc7, 0xb0, 0x53, 0xc9, 0x6f, 0x96, 0xaa, 0x92, 0x59, 0xd2, 0xa0, 0x68,
	0x18, 0x4f, 0x6a, 0xe6, 0x89, 0x45, 0xd3, 0x42, 0xdc, 0xb4, 0x68, 0x1a, 0xc6, 0xa3, 0x85, 0xb8,
	0x21, 0xd1, 0x27, 0x30, 0x6d, 0xbe, 0x67, 0xb3, 0xb9, 0xee, 0x6b, 0x66, 0xe5, 0x2b, 0xf5, 0x01,
	0xf8, 0x38, 0x03, 0x6b, 0x70, 0x72, 0x83, 0x53, 0xb2, 0x10, 0x6d, 0xc0, 0x41, 0xa2, 0x65, 0x5a,
	0xe4, 0x99, 0xb6, 0xef, 0xee, 0x84, 0x98, 0xa7, 0xcc, 0x8b, 0x72, 0x00, 0x3e, 0x3a, 0x5a, 0x76,
	0xf3, 0x16, 0x1c, 0xc0, 0x98, 0x83, 0x44, 0xd2, 0xb9, 0xdd, 0xc0, 0xac, 0x93, 0xf5, 0x2b, 0xd1,
	0x5f, 0xbd, 0x12, 0xdb, 0x02, 0xc8, 0x71, 0x1d, 0xb3, 0x18, 0x6f, 0x5b, 0x56, 0xfc, 0xa8, 0xc1,
	0xa8, 0xb3, 0x5e, 0x79, 0xd5, 0xe0, 0xfc, 0x09, 0x00, 0x1e, 0xdd, 0xa9, 0xac, 0xae, 0x64, 0xb5,
	0x01, 0x50, 0xa4, 0x4b, 0xfb, 0xb0, 0x3a, 0xaa, 0x44, 0x33, 0x4a, 0x4c, 0x24, 0x39, 0x5a, 0xd0,
	0x38, 0xfa, 0x05, 0x8c, 0x8f, 0xa9, 0x0c, 0x95, 0x69, 0x51, 0x65, 0xdb, 0x6f, 0x3f, 0x95, 0x51,
	0xf6, 0x99, 0xa0, 0x32, 0x6a, 0x1f, 0x00, 0x7f, 0x93, 0xb4, 0x98, 0x17, 0x95, 0x9d, 0xce, 0x47,
	0xce, 0x31, 0x32, 0x70, 0x92, 0x7c, 0xb9, 0xb0, 0xb1, 0x06, 0x87, 0x9d, 0xdc, 0xc6, 0xbe, 0x14,
	0x4c, 0x45, 0x7f, 0xec, 0xc1, 0x0e, 0xe7, 0x7b, 0xfa, 0x6d, 0x1a, 0xd0, 0x2e, 0x37, 0xe8, 0x2e,
	0x87, 0x47, 0xa4, 0xcd, 0xf2, 0xfc, 0x3c, 0x51, 0x9c, 0xea, 0x0d, 0xe3, 0x11, 0xd1, 0xcf, 0xb2,
	0xb5, 0x02, 0xdd, 0x5d, 0x2b, 0xd0, 0xa3, 0x4b, 0xf0, 0x9f, 0x2c, 0x6f, 0xad, 0x8d, 0x6d, 0xd1,
	0x46, 0x16, 0xd5, 0x01, 0xb1, 0x99, 0x9a, 0x2d, 0xed, 0x4e, 0xcd, 0xa2, 0x26, 0x31, 0xa5, 0xfb,
	0xb8, 0x3c, 0x3f, 0xa7, 0xc7, 0x70, 0xc3, 0x5b, 0xd1, 0x23, 0x80, 0x53, 0x39, 0x9f, 0xbf, 0x66,
	0x35, 0xfb, 0x8d, 0xd3, 0x7e, 0xf3, 0x35, 0xf8, 0x2f, 0x8b, 0xda, 0xc0, 0xae, 0x31, 0xbd, 0xd7,
	0x19, 0xe3, 0xbc, 0xc2, 0x98, 0x7e, 0x3b, 0xf1, 0xdf, 0x1d, 0x18, 0x50, 0x3a, 0xbf, 0x8e, 0x2e,
	0x2c, 0xbb, 0xaa, 0x62, 0x91, 0x2c, 0x75, 0xf3, 0x52, 0x79, 0xc8, 0xf8, 0x4a, 0x73, 0x9c, 0x37,
	0x05, 0x8b, 0x78, 0x2e, 0xd7, 0x14, 0x24, 0xc0, 0x24, 0x09, 0x9f, 0xb8, 0xce, 0x6b, 0xe4, 0x21,
	0x83, 0x42, 0x53, 0x53, 0x19, 0x71, 0x1e, 0xb7, 0x59, 0x19, 0xb9, 0xdc, 0xb9, 0xe8, 0x54, 0x46,
	0x14, 0x50, 0x39, 0x89, 0xe0, 0x14, 0xa6, 0x93, 0xae, 0x78, 0xab, 0x69, 0x7b, 0xed, 0x48, 0xbf,
	0x93, 0xe4, 0x37, 0x59, 0x2d, 0xbc, 0x21, 0xab, 0x1d, 0x6f, 0x4f, 0xe5, 0xef, 0x81, 0x57, 0xc9,
	0x54, 0x2a, 0xac, 0x85, 0x27, 0x5c, 0x7a, 0xd6, 0xb4, 0x7d, 0xb2, 0x2a, 0x29, 0x32, 0xdb, 0x2b,
	0x72, 0x95, 0x8e, 0xa5, 0xc8, 0xa2, 0x6f, 0x7b, 0xe0, 0xda, 0xfe, 0xc8, 0x56, 0xb8, 0x6f, 0xa4,
	0x65, 0x6d, 0x2b, 0xa4, 0xbf, 0xb5, 0x15, 0xd2, 0x89, 0x2b, 0xf6, 0xf9, 0x2d, 0xf2, 0xb9, 0xca,
	0x25, 0xdd, 0x36, 0x7a, 0x7e, 0x7f, 0x4e, 0x74, 0x73, 0x97, 0xdc, 0x4e, 0x4f, 0xe4, 0x3d, 0x18,
	0x55, 0x45, 0xb1, 0x40, 0xac, 0xd8, 0x64, 0x0c, 0xc9, 0x67, 0x84, 0x22, 0x7e, 0xb4, 0x54, 0x66,
	0x3b, 0x20, 0x23, 0xa2, 0x9f, 0x65, 0x9b, 0x2d, 0x90, 0xe8, 0xd7, 0x3d, 0x18, 0x7e, 0x91, 0xcb,
	0xc5, 0xed, 0xff, 0xd8, 0xc9, 0x59, 0x31, 0x7f, 0xb0, 0x66, 0x7e, 0xc7, 0xd4, 0xe1, 0x2b, 0x4d,
	0x75, 0x57, 0x4c, 0x8d, 0x7e, 0xe5, 0xc0, 0x98, 0x9d, 0xfd, 0xb8, 0x2c, 0xe7, 0xb7, 0x1b, 0x30,
	0xde, 0x07, 0x10, 0x28, 0x48, 0x10, 0xbb, 0xf5, 0x85, 0x20, 0xce, 0xd3, 0xaa, 0x58, 0x60, 0xb2,
	0xd5, 0x8a, 0x93, 0x4e, 0x47, 0x73, 0xa7, 0xd1, 0x79, 0x81, 0x5e, 0xfc, 0x11, 0xbc, 0xd3, 0xd1,
	0x5b, 0xe9, 0x72, 0xee, 0x36, 0x9a, 0x8f, 0x79, 0xdf, 0x53, 0x70, 0x4c, 0x61, 0x23, 0xa1, 0x63,
	0x0a, 0x3a, 0x72, 0x65, 0x13, 0x65, 0x3c, 0x72, 0xbc, 0x0a, 0x21, 0x8c, 0x16, 0x52, 0x6b, 0x71,
	0x21, 0xe9, 0xc1, 0xf3, 0xe3, 0x9a, 0x7c, 0x63, 0x75, 0x79, 0x1f, 0xa6, 0x1d, 0x4b, 0xda, 0x63,
	0x9a, 0x34, 0x66, 0x9c, 0xca, 0x9b, 0xe8, 0x3f, 0x4d, 0xe4, 0x7d, 0x6e, 0xe7, 0xdd, 0x07, 0xb0,
	0x4b, 0xb4, 0x61, 0xc3, 0xb7, 0x9c, 0x67, 0x6f, 0xb8, 0xee, 0xf7, 0x61, 0xda, 0x08, 0xbb, 0x4e,
	0x9a, 0xd4, 0x1a, 0xe4, 0xa3, 0x23, 0xd8, 0x6b, 0xb5, 0x56, 0x5c, 0x34, 0xad, 0xf5, 0xde, 0x8a,
	0x87, 0x22, 0xd8, 0x69, 0xd7, 0x41, 0x07, 0x30, 0x7a, 0xc7, 0xf5, 0x22, 0xb8, 0xff, 0x3f, 0xf5,
	0x01, 0x30, 0xb2, 0xdb, 0xbe, 0x76, 0x00, 0x03, 0x0a, 0xfc, 0x36, 0xc8, 0xe2, 0xb8, 0x06, 0xb2,
	0xb3, 0xf9, 0x14, 0x7d, 0xdf, 0x9e, 0x76, 0xd3, 0xa7, 0x76, 0xbb, 0x7d, 0xea, 0x03, 0x18, 0xe3,
	0x7a, 0x75, 0xa3, 0x84, 0x3b, 0x36, 0x80, 0x2c, 0x5b, 0xdc, 0x1f, 0xc0, 0x78, 0x51, 0xe4, 0xf2,
	0x36, 0x59, 0x88, 0x4b, 0x59, 0x87, 0x35, 0x20, 0xd6, 0x73, 0xe4, 0xd4, 0xed, 0x3f, 0xbf, 0x6d,
	0xff, 0x75, 0x2a, 0x2c, 0x58, 0xe9, 0x14, 0xde, 0x05, 0x97, 0xdb, 0xca, 0xb6, 0x9f, 0x60, 0x29,
	0xfc, 0xe0, 0x5a, 0x54, 0xc9, 0xb5, 0xca, 0x29, 0x8e, 0xf5, 0x63, 0xf7, 0x5a, 0x54, 0x5f, 0xab,
	0x3c, 0xf8, 0x08, 0x26, 0xf3, 0xc2, 0x18, 0x59, 0xdd, 0x72, 0x6a, 0xb3, 0xc3, 0x6d, 0x3a, 0xcb,
	0xa3, 0xf4, 0xe6, 0x21, 0xbc, 0x5b, 0xab, 0xa4, 0x95, 0x14, 0x46, 0x72, 0x74, 0x9f, 0x92, 0xe6,
	0x3b, 0x56, 0x74, 0x4c, 0x12, 0x0a, 0xf3, 0xfb, 0x00, 0x46, 0xde, 0x08, 0xcd, 0x13, 0xee, 0x72,
	0x75, 0x4b, 0x9c, 0x3a, 0xf7, 0xc2, 0x43, 0xdb, 0x6b, 0x83, 0xcb, 0x3f, 0x7a, 0x00, 0xc7, 0x64,
	0xe7, 0xd6, 0x2a, 0x7e, 0xa5, 0x61, 0xba, 0x52, 0xa1, 0xae, 0xb5, 0x07, 0xfa, 0x9b, 0x4d, 0x90,
	0x3b, 0x30, 0x24, 0x47, 0xd6, 0x6d, 0x05, 0x22, 0x30, 0x63, 0xe4, 0x02, 0xbb, 0xad, 0xd9, 0xe9,
	0x0a, 0x11, 0xb3, 0xee, 0x4e, 0xae, 0x55, 0xe1, 0xee, 0x5a, 0x53, 0xa0, 0x53, 0x85, 0x37, 0x0d,
	0x0d, 0x3e, 0x5b, 0xee, 0xe1, 0x68, 0xf0, 0x7f, 0xb6, 0x4c, 0x2f, 0xd9, 0x85, 0xfb, 0x00, 0x73,
	0x24, 0xb8, 0x40, 0xb0, 0x97, 0x8f, 0x38, 0x54, 0x11, 0x60, 0x29, 0x47, 0x7f, 0x5c, 0xb0, 0x52,
	0x93, 0x81, 0x62, 0x29, 0x87, 0xfc, 0x2d, 0x13, 0x35, 0x91, 0xb5, 0x9e, 0x08, 0xc5, 0xd1, 0x1f,
	0x7a, 0xe0, 0x61, 0x99, 0xf0, 0xbd, 0x5a, 0x31, 0xb6, 0xfb, 0x84, 0x3c, 0xea, 0xb5, 0xda, 0x6e,
	0x3b, 0x8e, 0x6d, 0x4f, 0xcb, 0xb6, 0xdb, 0xb9, 0xa7, 0x95, 0xd2, 0xdf, 0x16, 0x4b, 0x2d, 0xeb,
	0xa4, 0x9e, 0xc6, 0xeb, 0x67, 0x32, 0xda, 0x68, 0xd9, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0xb4,
	0xb0, 0x0f, 0xd8, 0x92, 0x1a, 0x00, 0x00,
}
